/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/james/csse4011/repo/mycode/apps/prac3/viewer_node/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /soc
 *   3   /pin-controller
 *   4   /pin-controller/i2c0_default
 *   5   /soc/interrupt-controller@3ff00104
 *   6   /soc/rtc@3ff48000
 *   7   /soc/gpio
 *   8   /soc/gpio/gpio@3ff44000
 *   9   /soc/i2c@3ff53000
 *   10  /soc/i2c@3ff53000/axp192@34
 *   11  /soc/i2c@3ff53000/axp192@34/axp192_gpio
 *   12  /bus_5v
 *   13  /chosen
 *   14  /esp32_bt_hci
 *   15  /eth
 *   16  /grove_header
 *   17  /soc/gpio/gpio@3ff44800
 *   18  /soc/i2c@3ff53000/ft5336@38
 *   19  /lvgl_pointer
 *   20  /m5stack_mbus_connector
 *   21  /mdio
 *   22  /wifi
 *   23  /cpus
 *   24  /cpus/power-states
 *   25  /cpus/power-states/deep_sleep
 *   26  /cpus/power-states/light_sleep
 *   27  /cpus/cpu@0
 *   28  /cpus/cpu@1
 *   29  /leds
 *   30  /leds/led_pwr
 *   31  /pin-controller/spim3_default
 *   32  /soc/spi@3ff65000
 *   33  /mipi_dbi
 *   34  /soc/i2c@3ff53000/axp192@34/axp192_regulator
 *   35  /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC3
 *   36  /mipi_dbi/ili9342c@0
 *   37  /pin-controller/uart2_rx_gpio13
 *   38  /pin-controller/uart2_rx_gpio14
 *   39  /pin-controller/i2c0_default/group1
 *   40  /pin-controller/i2c1_default
 *   41  /pin-controller/i2c1_default/group1
 *   42  /pin-controller/spim3_default/group1
 *   43  /pin-controller/spim3_default/group2
 *   44  /soc/adc@3ff48800
 *   45  /soc/adc@3ff48890
 *   46  /soc/can@3ff6b000
 *   47  /soc/counter@3ff5f000
 *   48  /soc/counter@3ff5f024
 *   49  /soc/counter@3ff60000
 *   50  /soc/counter@3ff60024
 *   51  /soc/dac@3ff48800
 *   52  /soc/dcache0@3f400000
 *   53  /soc/i2c@3ff67000
 *   54  /soc/icache0@400d0000
 *   55  /soc/ipi@3f4c0058
 *   56  /soc/ipi@3f4c005c
 *   57  /soc/memory@3ffe5230
 *   58  /soc/ipm@3ffe9630
 *   59  /soc/ledc@3ff59000
 *   60  /soc/mbox@3ffe9638
 *   61  /soc/mcpwm@3ff5e000
 *   62  /soc/mcpwm@3ff6c000
 *   63  /soc/memory@3ffae000
 *   64  /soc/memory@3ffe0000
 *   65  /soc/memory@3ffe5630
 *   66  /soc/memory@40070000
 *   67  /soc/pcnt@3ff57000
 *   68  /soc/rtc_timer@3ff48004
 *   69  /soc/spi@3ff64000
 *   70  /soc/touch@3ff48858
 *   71  /soc/trng@3ff75144
 *   72  /pin-controller/uart0_rx_gpio3
 *   73  /pin-controller/uart0_tx_gpio1
 *   74  /soc/uart@3ff40000
 *   75  /pin-controller/uart1_rx_gpio33
 *   76  /pin-controller/uart1_tx_gpio32
 *   77  /soc/uart@3ff50000
 *   78  /soc/uart@3ff6e000
 *   79  /soc/watchdog@3ff5f048
 *   80  /soc/watchdog@3ff60048
 *   81  /soc/dcache1@3f800000
 *   82  /soc/dcache1@3f800000/psram0
 *   83  /soc/flash-controller@3ff42000
 *   84  /soc/flash-controller@3ff42000/flash@0
 *   85  /soc/flash-controller@3ff42000/flash@0/partitions
 *   86  /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000
 *   87  /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000
 *   88  /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000
 *   89  /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000
 *   90  /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000
 *   91  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000
 *   92  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000
 *   93  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000
 *   94  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000
 *   95  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000
 *   96  /soc/i2c@3ff53000/pfc8563@51
 *   97  /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio0
 *   98  /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio1
 *   99  /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC1
 *   100 /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO2
 *   101 /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO3
 *   102 /soc/sdhc@3ff68000
 *   103 /soc/sdhc@3ff68000/sdhc@0
 *   104 /soc/sdhc@3ff68000/sdhc@1
 *   105 /soc/spi@3ff65000/sd@1
 *   106 /soc/spi@3ff65000/sd@1/mmc
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 15
#define DT_N_CHILD_NUM_STATUS_OKAY 12
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_eth) fn(DT_N_S_mdio) fn(DT_N_S_pin_controller) fn(DT_N_S_grove_header) fn(DT_N_S_m5stack_mbus_connector) fn(DT_N_S_leds) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_mipi_dbi) fn(DT_N_S_bus_5v)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_eth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mdio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_grove_header) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_m5stack_mbus_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mipi_dbi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bus_5v)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_eth, __VA_ARGS__) fn(DT_N_S_mdio, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_grove_header, __VA_ARGS__) fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_mipi_dbi, __VA_ARGS__) fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_eth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mdio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_grove_header, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mipi_dbi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_grove_header) fn(DT_N_S_m5stack_mbus_connector) fn(DT_N_S_leds) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_mipi_dbi) fn(DT_N_S_bus_5v)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_grove_header) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_m5stack_mbus_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mipi_dbi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bus_5v)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_grove_header, __VA_ARGS__) fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_mipi_dbi, __VA_ARGS__) fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_grove_header, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mipi_dbi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bus_5v, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /soc */ \
	3, /* /pin-controller */ \
	12, /* /bus_5v */ \
	13, /* /chosen */ \
	14, /* /esp32_bt_hci */ \
	15, /* /eth */ \
	16, /* /grove_header */ \
	19, /* /lvgl_pointer */ \
	20, /* /m5stack_mbus_connector */ \
	21, /* /mdio */ \
	22, /* /wifi */ \
	23, /* /cpus */ \
	29, /* /leds */ \
	33, /* /mipi_dbi */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_m5stack_core2 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_m5stack_core2 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "M5Stack"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "core2"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"m5stack,core2"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "m5stack,core2"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED m5stack,core2
#define DT_N_P_compatible_IDX_0_STRING_TOKEN m5stack_core2
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN M5STACK_CORE2
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 41
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 25
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_ipm_3ffe9630) fn(DT_N_S_soc_S_mbox_3ffe9638) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_3ff48000) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_uart_3ff50000) fn(DT_N_S_soc_S_uart_3ff6e000) fn(DT_N_S_soc_S_pcnt_3ff57000) fn(DT_N_S_soc_S_ledc_3ff59000) fn(DT_N_S_soc_S_mcpwm_3ff5e000) fn(DT_N_S_soc_S_mcpwm_3ff6c000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_touch_3ff48858) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff67000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_watchdog_3ff60048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_can_3ff6b000) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_dac_3ff48800) fn(DT_N_S_soc_S_adc_3ff48800) fn(DT_N_S_soc_S_adc_3ff48890) fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3ffe9630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3ffe9638) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_3ff48000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff50000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff6e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_3ff57000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_3ff59000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff5e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff6c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_3ff48858) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff67000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff60048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_3ff6b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_3ff48800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48890) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_3ff48000) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_3ff48000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 2
#define DT_N_S_soc_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	7, /* /soc/gpio */ \
	9, /* /soc/i2c@3ff53000 */ \
	32, /* /soc/spi@3ff65000 */ \
	44, /* /soc/adc@3ff48800 */ \
	45, /* /soc/adc@3ff48890 */ \
	46, /* /soc/can@3ff6b000 */ \
	47, /* /soc/counter@3ff5f000 */ \
	48, /* /soc/counter@3ff5f024 */ \
	49, /* /soc/counter@3ff60000 */ \
	50, /* /soc/counter@3ff60024 */ \
	51, /* /soc/dac@3ff48800 */ \
	52, /* /soc/dcache0@3f400000 */ \
	53, /* /soc/i2c@3ff67000 */ \
	54, /* /soc/icache0@400d0000 */ \
	55, /* /soc/ipi@3f4c0058 */ \
	56, /* /soc/ipi@3f4c005c */ \
	57, /* /soc/memory@3ffe5230 */ \
	58, /* /soc/ipm@3ffe9630 */ \
	59, /* /soc/ledc@3ff59000 */ \
	60, /* /soc/mbox@3ffe9638 */ \
	61, /* /soc/mcpwm@3ff5e000 */ \
	62, /* /soc/mcpwm@3ff6c000 */ \
	63, /* /soc/memory@3ffae000 */ \
	64, /* /soc/memory@3ffe0000 */ \
	65, /* /soc/memory@3ffe5630 */ \
	66, /* /soc/memory@40070000 */ \
	67, /* /soc/pcnt@3ff57000 */ \
	68, /* /soc/rtc_timer@3ff48004 */ \
	69, /* /soc/spi@3ff64000 */ \
	70, /* /soc/touch@3ff48858 */ \
	71, /* /soc/trng@3ff75144 */ \
	74, /* /soc/uart@3ff40000 */ \
	77, /* /soc/uart@3ff50000 */ \
	78, /* /soc/uart@3ff6e000 */ \
	79, /* /soc/watchdog@3ff5f048 */ \
	80, /* /soc/watchdog@3ff60048 */ \
	81, /* /soc/dcache1@3f800000 */ \
	83, /* /soc/flash-controller@3ff42000 */ \
	102, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = espressif,esp32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/espressif,esp32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"
#define DT_N_S_pin_controller_FULL_NAME_UNQUOTED pin-controller
#define DT_N_S_pin_controller_FULL_NAME_TOKEN pin_controller
#define DT_N_S_pin_controller_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_CHILD_NUM 9
#define DT_N_S_pin_controller_CHILD_NUM_STATUS_OKAY 9
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_HASH bWf59uCG_pY5hQAcoRx7FSfuctl8KNxAtmdgsI6QClA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 3
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	4, /* /pin-controller/i2c0_default */ \
	31, /* /pin-controller/spim3_default */ \
	37, /* /pin-controller/uart2_rx_gpio13 */ \
	38, /* /pin-controller/uart2_rx_gpio14 */ \
	40, /* /pin-controller/i2c1_default */ \
	72, /* /pin-controller/uart0_rx_gpio3 */ \
	73, /* /pin-controller/uart0_tx_gpio1 */ \
	75, /* /pin-controller/uart1_rx_gpio33 */ \
	76, /* /pin-controller/uart1_tx_gpio32 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl              DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_espressif_esp32_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "esp32-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_status "okay"
#define DT_N_S_pin_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_pin_controller_P_status_STRING_TOKEN okay
#define DT_N_S_pin_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pin_controller_P_status_IDX_0 "okay"
#define DT_N_S_pin_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_LEN 1
#define DT_N_S_pin_controller_P_status_EXISTS 1
#define DT_N_S_pin_controller_P_compatible {"espressif,esp32-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_IDX_0 "espressif,esp32-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PINCTRL
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_pin_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UNQUOTED i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_TOKEN i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UPPER_TOKEN I2C0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL(fn) fn(i2c0_default)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c0_default_HASH jwLAya2l1n5eq23pU58aJBqJOApGFQeY8GlS09jN_X8

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 4
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	9, /* /soc/i2c@3ff53000 */ \
	39, /* /pin-controller/i2c0_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/interrupt-controller@3ff00104
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_3ff00104
 *
 * Binding (compatible = espressif,esp32-intc):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/espressif,esp32-intc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PATH "/soc/interrupt-controller@3ff00104"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME "interrupt-controller@3ff00104"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_UNQUOTED interrupt-controller@3ff00104
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_TOKEN interrupt_controller_3ff00104
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_3FF00104

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_NODELABEL(fn) fn(intc)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_NODELABEL_VARGS(fn, ...) fn(intc, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_HASH _49jjenSCC7oKln2va4jqSXJlaOB8KkXBmMa_jEiKr4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_ORD 5
#define DT_N_S_soc_S_interrupt_controller_3ff00104_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_SUPPORTS_ORDS \
	8, /* /soc/gpio/gpio@3ff44000 */ \
	9, /* /soc/i2c@3ff53000 */ \
	15, /* /eth */ \
	17, /* /soc/gpio/gpio@3ff44800 */ \
	32, /* /soc/spi@3ff65000 */ \
	46, /* /soc/can@3ff6b000 */ \
	47, /* /soc/counter@3ff5f000 */ \
	48, /* /soc/counter@3ff5f024 */ \
	49, /* /soc/counter@3ff60000 */ \
	50, /* /soc/counter@3ff60024 */ \
	51, /* /soc/dac@3ff48800 */ \
	53, /* /soc/i2c@3ff67000 */ \
	55, /* /soc/ipi@3f4c0058 */ \
	56, /* /soc/ipi@3f4c005c */ \
	58, /* /soc/ipm@3ffe9630 */ \
	60, /* /soc/mbox@3ffe9638 */ \
	61, /* /soc/mcpwm@3ff5e000 */ \
	62, /* /soc/mcpwm@3ff6c000 */ \
	67, /* /soc/pcnt@3ff57000 */ \
	68, /* /soc/rtc_timer@3ff48004 */ \
	69, /* /soc/spi@3ff64000 */ \
	70, /* /soc/touch@3ff48858 */ \
	74, /* /soc/uart@3ff40000 */ \
	77, /* /soc/uart@3ff50000 */ \
	78, /* /soc/uart@3ff6e000 */ \
	79, /* /soc/watchdog@3ff5f048 */ \
	80, /* /soc/watchdog@3ff60048 */ \
	102, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_EXISTS 1
#define DT_N_INST_0_espressif_esp32_intc DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_NODELABEL_intc              DT_N_S_soc_S_interrupt_controller_3ff00104

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_VAL_ADDRESS 1072693508 /* 0x3ff00104 */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_VAL_SIZE 276 /* 0x114 */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MATCHES_espressif_esp32_intc 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MODEL_IDX_0 "esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg {1072693508 /* 0x3ff00104 */, 276 /* 0x114 */}
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_0 1072693508
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_1 276
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status "okay"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_LEN 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible {"espressif,esp32-intc"}
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0 "espressif,esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-intc
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_intc
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_INTC
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@3ff48000
 *
 * Node identifier: DT_N_S_soc_S_rtc_3ff48000
 *
 * Binding (compatible = espressif,esp32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/clock/espressif,esp32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_3ff48000_PATH "/soc/rtc@3ff48000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_3ff48000_FULL_NAME "rtc@3ff48000"
#define DT_N_S_soc_S_rtc_3ff48000_FULL_NAME_UNQUOTED rtc@3ff48000
#define DT_N_S_soc_S_rtc_3ff48000_FULL_NAME_TOKEN rtc_3ff48000
#define DT_N_S_soc_S_rtc_3ff48000_FULL_NAME_UPPER_TOKEN RTC_3FF48000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_3ff48000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_3ff48000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_3ff48000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_3ff48000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_3ff48000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_3ff48000_HASH AWk1OSqPakyGay9YdczPpe5CCJIFMtwIe7wHOmTiZeE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_3ff48000_ORD 6
#define DT_N_S_soc_S_rtc_3ff48000_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_3ff48000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_3ff48000_SUPPORTS_ORDS \
	9, /* /soc/i2c@3ff53000 */ \
	15, /* /eth */ \
	21, /* /mdio */ \
	32, /* /soc/spi@3ff65000 */ \
	44, /* /soc/adc@3ff48800 */ \
	45, /* /soc/adc@3ff48890 */ \
	46, /* /soc/can@3ff6b000 */ \
	47, /* /soc/counter@3ff5f000 */ \
	48, /* /soc/counter@3ff5f024 */ \
	49, /* /soc/counter@3ff60000 */ \
	50, /* /soc/counter@3ff60024 */ \
	51, /* /soc/dac@3ff48800 */ \
	53, /* /soc/i2c@3ff67000 */ \
	59, /* /soc/ledc@3ff59000 */ \
	61, /* /soc/mcpwm@3ff5e000 */ \
	62, /* /soc/mcpwm@3ff6c000 */ \
	67, /* /soc/pcnt@3ff57000 */ \
	68, /* /soc/rtc_timer@3ff48004 */ \
	69, /* /soc/spi@3ff64000 */ \
	74, /* /soc/uart@3ff40000 */ \
	77, /* /soc/uart@3ff50000 */ \
	78, /* /soc/uart@3ff6e000 */ \
	79, /* /soc/watchdog@3ff5f048 */ \
	80, /* /soc/watchdog@3ff60048 */ \
	102, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_3ff48000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc DT_N_S_soc_S_rtc_3ff48000
#define DT_N_NODELABEL_rtc              DT_N_S_soc_S_rtc_3ff48000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_3ff48000_REG_NUM 1
#define DT_N_S_soc_S_rtc_3ff48000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_REG_IDX_0_VAL_ADDRESS 1072988160 /* 0x3ff48000 */
#define DT_N_S_soc_S_rtc_3ff48000_REG_IDX_0_VAL_SIZE 216 /* 0xd8 */
#define DT_N_S_soc_S_rtc_3ff48000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_3ff48000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_3ff48000_IRQ_NUM 0
#define DT_N_S_soc_S_rtc_3ff48000_IRQ_LEVEL 0
#define DT_N_S_soc_S_rtc_3ff48000_COMPAT_MATCHES_espressif_esp32_rtc 1
#define DT_N_S_soc_S_rtc_3ff48000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_rtc_3ff48000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_COMPAT_MODEL_IDX_0 "esp32-rtc"
#define DT_N_S_soc_S_rtc_3ff48000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_3ff48000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_3ff48000_P_reg {1072988160 /* 0x3ff48000 */, 216 /* 0xd8 */}
#define DT_N_S_soc_S_rtc_3ff48000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_reg_IDX_0 1072988160
#define DT_N_S_soc_S_rtc_3ff48000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_reg_IDX_1 216
#define DT_N_S_soc_S_rtc_3ff48000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_fast_clk_src 1
#define DT_N_S_soc_S_rtc_3ff48000_P_fast_clk_src_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_3ff48000_P_fast_clk_src_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_fast_clk_src_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_fast_clk_src_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_slow_clk_src 0
#define DT_N_S_soc_S_rtc_3ff48000_P_slow_clk_src_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rtc_3ff48000_P_slow_clk_src_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_slow_clk_src_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_slow_clk_src_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_status "okay"
#define DT_N_S_soc_S_rtc_3ff48000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_3ff48000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_3ff48000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_3ff48000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_3ff48000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_3ff48000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_3ff48000, status, 0)
#define DT_N_S_soc_S_rtc_3ff48000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_3ff48000, status, 0)
#define DT_N_S_soc_S_rtc_3ff48000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_3ff48000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_3ff48000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_3ff48000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_3ff48000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_3ff48000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible {"espressif,esp32-rtc"}
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_IDX_0 "espressif,esp32-rtc"
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-rtc
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_rtc
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_RTC
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_3ff48000, compatible, 0)
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_3ff48000, compatible, 0)
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_3ff48000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_3ff48000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_3ff48000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_3ff48000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_3ff48000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_3ff48000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_3ff48000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio
 *
 * Node identifier: DT_N_S_soc_S_gpio
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_PATH "/soc/gpio"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_FULL_NAME "gpio"
#define DT_N_S_soc_S_gpio_FULL_NAME_UNQUOTED gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_TOKEN gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_UPPER_TOKEN GPIO

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL(fn) fn(gpio)
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_CHILD_NUM 2
#define DT_N_S_soc_S_gpio_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_gpio_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_gpio_HASH _Rog3Qc6JJHktlTnUGxRyVgQ8fH7dhqdBaaNvGKrX_E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_ORD 7
#define DT_N_S_soc_S_gpio_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_SUPPORTS_ORDS \
	8, /* /soc/gpio/gpio@3ff44000 */ \
	17, /* /soc/gpio/gpio@3ff44800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_EXISTS 1
#define DT_N_INST_1_simple_bus DT_N_S_soc_S_gpio
#define DT_N_NODELABEL_gpio    DT_N_S_soc_S_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_REG_NUM 0
#define DT_N_S_soc_S_gpio_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_S_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_P_compatible {"simple-bus"}
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@3ff44000
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_3ff44000
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PATH "/soc/gpio/gpio@3ff44000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME "gpio@3ff44000"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_UNQUOTED gpio@3ff44000
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_TOKEN gpio_3ff44000
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_UPPER_TOKEN GPIO_3FF44000

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_HASH OjflC3TMG9KJnSFVd1jDqlQfb1g_qPwj3ATy0y3sO2A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_ORD 8
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REQUIRES_ORDS \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	7, /* /soc/gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_SUPPORTS_ORDS \
	9, /* /soc/i2c@3ff53000 */ \
	32, /* /soc/spi@3ff65000 */ \
	33, /* /mipi_dbi */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_NODELABEL_gpio0             DT_N_S_soc_S_gpio_S_gpio_3ff44000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_VAL_ADDRESS 1072971776 /* 0x3ff44000 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg {1072971776 /* 0x3ff44000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_0 1072971776
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_ngpios 32
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges {20 /* 0x14 */, 1 /* 0x1 */, 24 /* 0x18 */, 1 /* 0x1 */, 28 /* 0x1c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_0 20
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_1 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_2 24
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_3 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_4 28
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_5 4
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_LEN 6
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_PATH "/soc/i2c@3ff53000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME "i2c@3ff53000"
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_UNQUOTED i2c@3ff53000
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_TOKEN i2c_3ff53000
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_UPPER_TOKEN I2C_3FF53000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_NODELABEL_NUM 2
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_NODELABEL(fn) fn(i2c0) fn(m5stack_mbus_i2c0)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__) fn(m5stack_mbus_i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_NUM 3
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_HASH cnp_xMDS0Fg2uIc1dlfnElYVgT6_vMamqb_fhqVTUBo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_ORD 9
#define DT_N_S_soc_S_i2c_3ff53000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_REQUIRES_ORDS \
	2, /* /soc */ \
	4, /* /pin-controller/i2c0_default */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	8, /* /soc/gpio/gpio@3ff44000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_SUPPORTS_ORDS \
	10, /* /soc/i2c@3ff53000/axp192@34 */ \
	18, /* /soc/i2c@3ff53000/ft5336@38 */ \
	96, /* /soc/i2c@3ff53000/pfc8563@51 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_EXISTS 1
#define DT_N_ALIAS_i2c_0                 DT_N_S_soc_S_i2c_3ff53000
#define DT_N_INST_0_espressif_esp32_i2c  DT_N_S_soc_S_i2c_3ff53000
#define DT_N_NODELABEL_i2c0              DT_N_S_soc_S_i2c_3ff53000
#define DT_N_NODELABEL_m5stack_mbus_i2c0 DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_ADDRESS 1073033216 /* 0x3ff53000 */
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff53000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff53000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_P_reg {1073033216 /* 0x3ff53000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_0 1073033216
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_pin 22
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_pin 21
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_3ff53000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_3ff53000_P_rx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_timeout_us 0
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_timeout_us_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sq_size 4
#define DT_N_S_soc_S_i2c_3ff53000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_cq_size 4
#define DT_N_S_soc_S_i2c_3ff53000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset 4
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34
 *
 * Binding (compatible = x-powers,axp192):
 *   $ZEPHYR_BASE/dts/bindings/mfd/x-powers,axp192.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_PATH "/soc/i2c@3ff53000/axp192@34"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FULL_NAME "axp192@34"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FULL_NAME_UNQUOTED axp192@34
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FULL_NAME_TOKEN axp192_34
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FULL_NAME_UPPER_TOKEN AXP192_34

/* Node parent (/soc/i2c@3ff53000) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_PARENT DT_N_S_soc_S_i2c_3ff53000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_NODELABEL(fn) fn(axp192_pmic)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_NODELABEL_VARGS(fn, ...) fn(axp192_pmic, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_CHILD_NUM 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_HASH 3gDELc093GYa3gW_HsJ1QhXey2amb3Vdorcl3pG9OoQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_ORD 10
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_REQUIRES_ORDS \
	9, /* /soc/i2c@3ff53000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_SUPPORTS_ORDS \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */ \
	34, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_EXISTS 1
#define DT_N_INST_0_x_powers_axp192 DT_N_S_soc_S_i2c_3ff53000_S_axp192_34
#define DT_N_NODELABEL_axp192_pmic  DT_N_S_soc_S_i2c_3ff53000_S_axp192_34

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_REG_IDX_0_VAL_ADDRESS 52 /* 0x34 */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_COMPAT_MATCHES_x_powers_axp192 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_COMPAT_VENDOR_IDX_0 "X-Powers"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_COMPAT_MODEL_IDX_0 "axp192"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_reg {52 /* 0x34 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_reg_IDX_0 52
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_vbusen_disable 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_vbusen_disable_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible {"x-powers,axp192"}
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_IDX_0 "x-powers,axp192"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_IDX_0_STRING_UNQUOTED x-powers,axp192
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_IDX_0_STRING_TOKEN x_powers_axp192
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_IDX_0_STRING_UPPER_TOKEN X_POWERS_AXP192
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_gpio
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
 *
 * Binding (compatible = x-powers,axp192-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/x-powers,axp192-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_PATH "/soc/i2c@3ff53000/axp192@34/axp192_gpio"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FULL_NAME "axp192_gpio"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FULL_NAME_UNQUOTED axp192_gpio
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FULL_NAME_TOKEN axp192_gpio
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FULL_NAME_UPPER_TOKEN AXP192_GPIO

/* Node parent (/soc/i2c@3ff53000/axp192@34) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_NODELABEL(fn) fn(axp192_gpio)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(axp192_gpio, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_CHILD_NUM 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_HASH 68XzoQvKh0SrzGRXdQhT3z6Hec5kOPVRQOZhXlZLfok

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_ORD 11
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_REQUIRES_ORDS \
	10, /* /soc/i2c@3ff53000/axp192@34 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_SUPPORTS_ORDS \
	12, /* /bus_5v */ \
	29, /* /leds */ \
	30, /* /leds/led_pwr */ \
	33, /* /mipi_dbi */ \
	97, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio0 */ \
	98, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_EXISTS 1
#define DT_N_INST_0_x_powers_axp192_gpio DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_NODELABEL_axp192_gpio       DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_COMPAT_MATCHES_x_powers_axp192_gpio 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_COMPAT_VENDOR_IDX_0 "X-Powers"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_COMPAT_MODEL_IDX_0 "axp192-gpio"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_P_ngpios 6
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_P_gpio_controller 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_P_gpio_controller_EXISTS 1

/*
 * Devicetree node: /bus_5v
 *
 * Node identifier: DT_N_S_bus_5v
 *
 * Binding (compatible = regulator-fixed):
 *   $ZEPHYR_BASE/dts/bindings/regulator/regulator-fixed.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_bus_5v_PATH "/bus_5v"

/* Node's name with unit-address: */
#define DT_N_S_bus_5v_FULL_NAME "bus_5v"
#define DT_N_S_bus_5v_FULL_NAME_UNQUOTED bus_5v
#define DT_N_S_bus_5v_FULL_NAME_TOKEN bus_5v
#define DT_N_S_bus_5v_FULL_NAME_UPPER_TOKEN BUS_5V

/* Node parent (/) identifier: */
#define DT_N_S_bus_5v_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_bus_5v_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_bus_5v_NODELABEL_NUM 1
#define DT_N_S_bus_5v_FOREACH_NODELABEL(fn) fn(bus_5v)
#define DT_N_S_bus_5v_FOREACH_NODELABEL_VARGS(fn, ...) fn(bus_5v, __VA_ARGS__)
#define DT_N_S_bus_5v_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_bus_5v_CHILD_NUM 0
#define DT_N_S_bus_5v_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_bus_5v_FOREACH_CHILD(fn) 
#define DT_N_S_bus_5v_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_bus_5v_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_bus_5v_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_bus_5v_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_bus_5v_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_bus_5v_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_bus_5v_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_bus_5v_HASH R_WHgBlxWJWoWIDLBlgUc0bjFr1OmtIkBVIPQ_S25sI

/* Node's dependency ordinal: */
#define DT_N_S_bus_5v_ORD 12
#define DT_N_S_bus_5v_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_bus_5v_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_bus_5v_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_bus_5v_EXISTS 1
#define DT_N_INST_0_regulator_fixed DT_N_S_bus_5v
#define DT_N_NODELABEL_bus_5v       DT_N_S_bus_5v

/* Macros for properties that are special in the specification: */
#define DT_N_S_bus_5v_REG_NUM 0
#define DT_N_S_bus_5v_RANGES_NUM 0
#define DT_N_S_bus_5v_FOREACH_RANGE(fn) 
#define DT_N_S_bus_5v_IRQ_NUM 0
#define DT_N_S_bus_5v_IRQ_LEVEL 0
#define DT_N_S_bus_5v_COMPAT_MATCHES_regulator_fixed 1
#define DT_N_S_bus_5v_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_bus_5v_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_bus_5v_P_regulator_name "bus_5v"
#define DT_N_S_bus_5v_P_regulator_name_STRING_UNQUOTED bus_5v
#define DT_N_S_bus_5v_P_regulator_name_STRING_TOKEN bus_5v
#define DT_N_S_bus_5v_P_regulator_name_STRING_UPPER_TOKEN BUS_5V
#define DT_N_S_bus_5v_P_regulator_name_IDX_0 "bus_5v"
#define DT_N_S_bus_5v_P_regulator_name_IDX_0_EXISTS 1
#define DT_N_S_bus_5v_P_regulator_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bus_5v, regulator_name, 0)
#define DT_N_S_bus_5v_P_regulator_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bus_5v, regulator_name, 0)
#define DT_N_S_bus_5v_P_regulator_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bus_5v, regulator_name, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_regulator_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bus_5v, regulator_name, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_regulator_name_LEN 1
#define DT_N_S_bus_5v_P_regulator_name_EXISTS 1
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_EXISTS 1
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_VAL_pin 5
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_VAL_flags 0
#define DT_N_S_bus_5v_P_enable_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_bus_5v_P_enable_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bus_5v, enable_gpios, 0)
#define DT_N_S_bus_5v_P_enable_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bus_5v, enable_gpios, 0)
#define DT_N_S_bus_5v_P_enable_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bus_5v, enable_gpios, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_enable_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bus_5v, enable_gpios, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_enable_gpios_LEN 1
#define DT_N_S_bus_5v_P_enable_gpios_EXISTS 1
#define DT_N_S_bus_5v_P_compatible {"regulator-fixed"}
#define DT_N_S_bus_5v_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_bus_5v_P_compatible_IDX_0 "regulator-fixed"
#define DT_N_S_bus_5v_P_compatible_IDX_0_STRING_UNQUOTED regulator-fixed
#define DT_N_S_bus_5v_P_compatible_IDX_0_STRING_TOKEN regulator_fixed
#define DT_N_S_bus_5v_P_compatible_IDX_0_STRING_UPPER_TOKEN REGULATOR_FIXED
#define DT_N_S_bus_5v_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bus_5v, compatible, 0)
#define DT_N_S_bus_5v_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bus_5v, compatible, 0)
#define DT_N_S_bus_5v_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bus_5v, compatible, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bus_5v, compatible, 0, __VA_ARGS__)
#define DT_N_S_bus_5v_P_compatible_LEN 1
#define DT_N_S_bus_5v_P_compatible_EXISTS 1
#define DT_N_S_bus_5v_P_zephyr_deferred_init 0
#define DT_N_S_bus_5v_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_bus_5v_P_wakeup_source 0
#define DT_N_S_bus_5v_P_wakeup_source_EXISTS 1
#define DT_N_S_bus_5v_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_bus_5v_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_bus_5v_P_regulator_always_on 0
#define DT_N_S_bus_5v_P_regulator_always_on_EXISTS 1
#define DT_N_S_bus_5v_P_regulator_boot_on 0
#define DT_N_S_bus_5v_P_regulator_boot_on_EXISTS 1

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 13
#define DT_N_S_chosen_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /esp32_bt_hci
 *
 * Node identifier: DT_N_S_esp32_bt_hci
 *
 * Binding (compatible = espressif,esp32-bt-hci):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/espressif,esp32-bt-hci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_esp32_bt_hci_PATH "/esp32_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_esp32_bt_hci_FULL_NAME "esp32_bt_hci"
#define DT_N_S_esp32_bt_hci_FULL_NAME_UNQUOTED esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_TOKEN esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_UPPER_TOKEN ESP32_BT_HCI

/* Node parent (/) identifier: */
#define DT_N_S_esp32_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_esp32_bt_hci_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_esp32_bt_hci_NODELABEL_NUM 1
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL(fn) fn(esp32_bt_hci)
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL_VARGS(fn, ...) fn(esp32_bt_hci, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_esp32_bt_hci_CHILD_NUM 0
#define DT_N_S_esp32_bt_hci_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_esp32_bt_hci_HASH WzQFLnWOli81_h6U7zBvNN_8VSeDs53nERgPVwn7L3U

/* Node's dependency ordinal: */
#define DT_N_S_esp32_bt_hci_ORD 14
#define DT_N_S_esp32_bt_hci_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_esp32_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_esp32_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_esp32_bt_hci_EXISTS 1
#define DT_N_INST_0_espressif_esp32_bt_hci DT_N_S_esp32_bt_hci
#define DT_N_NODELABEL_esp32_bt_hci        DT_N_S_esp32_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_esp32_bt_hci_REG_NUM 0
#define DT_N_S_esp32_bt_hci_RANGES_NUM 0
#define DT_N_S_esp32_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_esp32_bt_hci_IRQ_NUM 0
#define DT_N_S_esp32_bt_hci_IRQ_LEVEL 0
#define DT_N_S_esp32_bt_hci_COMPAT_MATCHES_espressif_esp32_bt_hci 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0 "esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_esp32_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_esp32_bt_hci_P_bt_hci_name "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UNQUOTED BT ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UPPER_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0 "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus "ipm"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UNQUOTED ipm
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_TOKEN ipm
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UPPER_TOKEN IPM
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0 "ipm"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_IDX 11
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_VAL_ipm_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks {"no-auto-dle"}
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_IDX 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_VAL_no_auto_dle_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0 "no-auto-dle"
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UNQUOTED no-auto-dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_TOKEN no_auto_dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UPPER_TOKEN NO_AUTO_DLE
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext 0
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status "okay"
#define DT_N_S_esp32_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_esp32_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_LEN 1
#define DT_N_S_esp32_bt_hci_P_status_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible {"espressif,esp32-bt-hci"}
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0 "espressif,esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-bt-hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_bt_hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_BT_HCI
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_LEN 1
#define DT_N_S_esp32_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init 0
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_wakeup_source 0
#define DT_N_S_esp32_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /eth
 *
 * Node identifier: DT_N_S_eth
 *
 * Binding (compatible = espressif,esp32-eth):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/espressif,esp32-eth.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_eth_PATH "/eth"

/* Node's name with unit-address: */
#define DT_N_S_eth_FULL_NAME "eth"
#define DT_N_S_eth_FULL_NAME_UNQUOTED eth
#define DT_N_S_eth_FULL_NAME_TOKEN eth
#define DT_N_S_eth_FULL_NAME_UPPER_TOKEN ETH

/* Node parent (/) identifier: */
#define DT_N_S_eth_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_eth_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_eth_NODELABEL_NUM 1
#define DT_N_S_eth_FOREACH_NODELABEL(fn) fn(eth)
#define DT_N_S_eth_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth, __VA_ARGS__)
#define DT_N_S_eth_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_eth_CHILD_NUM 0
#define DT_N_S_eth_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_eth_FOREACH_CHILD(fn) 
#define DT_N_S_eth_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_eth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_eth_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_eth_HASH g4XfqNvxgFKetFGwX7i_IYSqWy3YWDj6sPhKb3y58g0

/* Node's dependency ordinal: */
#define DT_N_S_eth_ORD 15
#define DT_N_S_eth_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_eth_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_eth_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_eth_EXISTS 1
#define DT_N_INST_0_espressif_esp32_eth DT_N_S_eth
#define DT_N_NODELABEL_eth              DT_N_S_eth

/* Macros for properties that are special in the specification: */
#define DT_N_S_eth_REG_NUM 0
#define DT_N_S_eth_RANGES_NUM 0
#define DT_N_S_eth_FOREACH_RANGE(fn) 
#define DT_N_S_eth_IRQ_NUM 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_eth_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_eth_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_eth_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_IRQ_LEVEL 1
#define DT_N_S_eth_COMPAT_MATCHES_espressif_esp32_eth 1
#define DT_N_S_eth_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_eth_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_eth_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_eth_COMPAT_MODEL_IDX_0 "esp32-eth"
#define DT_N_S_eth_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_eth_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_eth_P_zephyr_random_mac_address 0
#define DT_N_S_eth_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_eth_P_status "disabled"
#define DT_N_S_eth_P_status_STRING_UNQUOTED disabled
#define DT_N_S_eth_P_status_STRING_TOKEN disabled
#define DT_N_S_eth_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_eth_P_status_IDX_0 "disabled"
#define DT_N_S_eth_P_status_IDX_0_EXISTS 1
#define DT_N_S_eth_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_eth_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, status, 0)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, status, 0)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, status, 0, __VA_ARGS__)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, status, 0, __VA_ARGS__)
#define DT_N_S_eth_P_status_LEN 1
#define DT_N_S_eth_P_status_EXISTS 1
#define DT_N_S_eth_P_compatible {"espressif,esp32-eth"}
#define DT_N_S_eth_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_eth_P_compatible_IDX_0 "espressif,esp32-eth"
#define DT_N_S_eth_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-eth
#define DT_N_S_eth_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_eth
#define DT_N_S_eth_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ETH
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, compatible, 0)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, compatible, 0)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, compatible, 0, __VA_ARGS__)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, compatible, 0, __VA_ARGS__)
#define DT_N_S_eth_P_compatible_LEN 1
#define DT_N_S_eth_P_compatible_EXISTS 1
#define DT_N_S_eth_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_eth_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_0 38
#define DT_N_S_eth_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_1 0
#define DT_N_S_eth_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_2 0
#define DT_N_S_eth_P_interrupts_EXISTS 1
#define DT_N_S_eth_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, interrupt_parent, 0)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, interrupt_parent, 0)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_eth_P_interrupt_parent_LEN 1
#define DT_N_S_eth_P_interrupt_parent_EXISTS 1
#define DT_N_S_eth_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_eth_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_eth_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_eth_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, clocks, 0)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, clocks, 0)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, clocks, 0, __VA_ARGS__)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, clocks, 0, __VA_ARGS__)
#define DT_N_S_eth_P_clocks_LEN 1
#define DT_N_S_eth_P_clocks_EXISTS 1
#define DT_N_S_eth_P_zephyr_deferred_init 0
#define DT_N_S_eth_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_eth_P_wakeup_source 0
#define DT_N_S_eth_P_wakeup_source_EXISTS 1
#define DT_N_S_eth_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_eth_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /grove_header
 *
 * Node identifier: DT_N_S_grove_header
 *
 * Binding (compatible = grove-header):
 *   $ZEPHYR_BASE/dts/bindings/gpio/grove-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_grove_header_PATH "/grove_header"

/* Node's name with unit-address: */
#define DT_N_S_grove_header_FULL_NAME "grove_header"
#define DT_N_S_grove_header_FULL_NAME_UNQUOTED grove_header
#define DT_N_S_grove_header_FULL_NAME_TOKEN grove_header
#define DT_N_S_grove_header_FULL_NAME_UPPER_TOKEN GROVE_HEADER

/* Node parent (/) identifier: */
#define DT_N_S_grove_header_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_grove_header_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_grove_header_NODELABEL_NUM 1
#define DT_N_S_grove_header_FOREACH_NODELABEL(fn) fn(grove_header)
#define DT_N_S_grove_header_FOREACH_NODELABEL_VARGS(fn, ...) fn(grove_header, __VA_ARGS__)
#define DT_N_S_grove_header_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_grove_header_CHILD_NUM 0
#define DT_N_S_grove_header_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_grove_header_FOREACH_CHILD(fn) 
#define DT_N_S_grove_header_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_grove_header_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_grove_header_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_grove_header_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_grove_header_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_grove_header_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_grove_header_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_grove_header_HASH MohMXzc1SiGkMr2ZaoH5Ax0wgn_6TDcuJGL3fkU1wgc

/* Node's dependency ordinal: */
#define DT_N_S_grove_header_ORD 16
#define DT_N_S_grove_header_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_grove_header_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_grove_header_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_grove_header_EXISTS 1
#define DT_N_INST_0_grove_header    DT_N_S_grove_header
#define DT_N_NODELABEL_grove_header DT_N_S_grove_header

/* Macros for properties that are special in the specification: */
#define DT_N_S_grove_header_REG_NUM 0
#define DT_N_S_grove_header_RANGES_NUM 0
#define DT_N_S_grove_header_FOREACH_RANGE(fn) 
#define DT_N_S_grove_header_IRQ_NUM 0
#define DT_N_S_grove_header_IRQ_LEVEL 0
#define DT_N_S_grove_header_COMPAT_MATCHES_grove_header 1
#define DT_N_S_grove_header_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_grove_header_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_grove_header_P_compatible {"grove-header"}
#define DT_N_S_grove_header_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_grove_header_P_compatible_IDX_0 "grove-header"
#define DT_N_S_grove_header_P_compatible_IDX_0_STRING_UNQUOTED grove-header
#define DT_N_S_grove_header_P_compatible_IDX_0_STRING_TOKEN grove_header
#define DT_N_S_grove_header_P_compatible_IDX_0_STRING_UPPER_TOKEN GROVE_HEADER
#define DT_N_S_grove_header_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_grove_header, compatible, 0)
#define DT_N_S_grove_header_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_grove_header, compatible, 0)
#define DT_N_S_grove_header_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_grove_header, compatible, 0, __VA_ARGS__)
#define DT_N_S_grove_header_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_grove_header, compatible, 0, __VA_ARGS__)
#define DT_N_S_grove_header_P_compatible_LEN 1
#define DT_N_S_grove_header_P_compatible_EXISTS 1
#define DT_N_S_grove_header_P_zephyr_deferred_init 0
#define DT_N_S_grove_header_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_grove_header_P_wakeup_source 0
#define DT_N_S_grove_header_P_wakeup_source_EXISTS 1
#define DT_N_S_grove_header_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_grove_header_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@3ff44800
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_3ff44800
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PATH "/soc/gpio/gpio@3ff44800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME "gpio@3ff44800"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_UNQUOTED gpio@3ff44800
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_TOKEN gpio_3ff44800
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_UPPER_TOKEN GPIO_3FF44800

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_HASH Nf49Zh0F2I6gqXbS8e4JanK_GQiu_1LwSKd4q1Fq6pk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_ORD 17
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REQUIRES_ORDS \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	7, /* /soc/gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_SUPPORTS_ORDS \
	18, /* /soc/i2c@3ff53000/ft5336@38 */ \
	53, /* /soc/i2c@3ff67000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_EXISTS 1
#define DT_N_INST_1_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_3ff44800
#define DT_N_NODELABEL_gpio1             DT_N_S_soc_S_gpio_S_gpio_3ff44800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_VAL_ADDRESS 1072973824 /* 0x3ff44800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg {1072973824 /* 0x3ff44800 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_0 1072973824
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_ngpios 8
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/ft5336@38
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
 *
 * Binding (compatible = focaltech,ft5336):
 *   $ZEPHYR_BASE/dts/bindings/input/focaltech,ft5336.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_PATH "/soc/i2c@3ff53000/ft5336@38"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FULL_NAME "ft5336@38"
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FULL_NAME_UNQUOTED ft5336@38
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FULL_NAME_TOKEN ft5336_38
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FULL_NAME_UPPER_TOKEN FT5336_38

/* Node parent (/soc/i2c@3ff53000) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_PARENT DT_N_S_soc_S_i2c_3ff53000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_NODELABEL(fn) fn(ft5336_touch)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_NODELABEL_VARGS(fn, ...) fn(ft5336_touch, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_HASH cvTrzy9mKThGmaXgWTLjLobvK1GbHsSsasPO94jStFM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_ORD 18
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_REQUIRES_ORDS \
	9, /* /soc/i2c@3ff53000 */ \
	17, /* /soc/gpio/gpio@3ff44800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_SUPPORTS_ORDS \
	19, /* /lvgl_pointer */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_EXISTS 1
#define DT_N_INST_0_focaltech_ft5336 DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
#define DT_N_NODELABEL_ft5336_touch  DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_REG_IDX_0_VAL_ADDRESS 56 /* 0x38 */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_COMPAT_MATCHES_focaltech_ft5336 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_COMPAT_VENDOR_IDX_0 "FocalTech Systems Co.,Ltd"
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_COMPAT_MODEL_IDX_0 "ft5336"
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44800
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_VAL_pin 7
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, int_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, int_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, int_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, int_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_int_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_reg {56 /* 0x38 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_reg_IDX_0 56
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible {"focaltech,ft5336"}
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_IDX_0 "focaltech,ft5336"
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_IDX_0_STRING_UNQUOTED focaltech,ft5336
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_IDX_0_STRING_TOKEN focaltech_ft5336
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_IDX_0_STRING_UPPER_TOKEN FOCALTECH_FT5336
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_screen_width 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_screen_width_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_screen_height 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_screen_height_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_inverted_x 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_inverted_x_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_inverted_y 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_inverted_y_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_swapped_x_y 0
#define DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38_P_swapped_x_y_EXISTS 1

/*
 * Devicetree node: /lvgl_pointer
 *
 * Node identifier: DT_N_S_lvgl_pointer
 *
 * Binding (compatible = zephyr,lvgl-pointer-input):
 *   $ZEPHYR_BASE/dts/bindings/input/zephyr,lvgl-pointer-input.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_lvgl_pointer_PATH "/lvgl_pointer"

/* Node's name with unit-address: */
#define DT_N_S_lvgl_pointer_FULL_NAME "lvgl_pointer"
#define DT_N_S_lvgl_pointer_FULL_NAME_UNQUOTED lvgl_pointer
#define DT_N_S_lvgl_pointer_FULL_NAME_TOKEN lvgl_pointer
#define DT_N_S_lvgl_pointer_FULL_NAME_UPPER_TOKEN LVGL_POINTER

/* Node parent (/) identifier: */
#define DT_N_S_lvgl_pointer_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_lvgl_pointer_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_lvgl_pointer_NODELABEL_NUM 0
#define DT_N_S_lvgl_pointer_FOREACH_NODELABEL(fn) 
#define DT_N_S_lvgl_pointer_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_lvgl_pointer_CHILD_NUM 0
#define DT_N_S_lvgl_pointer_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_lvgl_pointer_FOREACH_CHILD(fn) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_lvgl_pointer_HASH 9oAfOZodC_aqxbBUiGPA779FZbyhILEYrqO3oMLRpXQ

/* Node's dependency ordinal: */
#define DT_N_S_lvgl_pointer_ORD 19
#define DT_N_S_lvgl_pointer_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_lvgl_pointer_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /soc/i2c@3ff53000/ft5336@38 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_lvgl_pointer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_lvgl_pointer_EXISTS 1
#define DT_N_INST_0_zephyr_lvgl_pointer_input DT_N_S_lvgl_pointer

/* Macros for properties that are special in the specification: */
#define DT_N_S_lvgl_pointer_REG_NUM 0
#define DT_N_S_lvgl_pointer_RANGES_NUM 0
#define DT_N_S_lvgl_pointer_FOREACH_RANGE(fn) 
#define DT_N_S_lvgl_pointer_IRQ_NUM 0
#define DT_N_S_lvgl_pointer_IRQ_LEVEL 0
#define DT_N_S_lvgl_pointer_COMPAT_MATCHES_zephyr_lvgl_pointer_input 1
#define DT_N_S_lvgl_pointer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_lvgl_pointer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_COMPAT_MODEL_IDX_0 "lvgl-pointer-input"
#define DT_N_S_lvgl_pointer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_lvgl_pointer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_lvgl_pointer_P_swap_xy 1
#define DT_N_S_lvgl_pointer_P_swap_xy_EXISTS 1
#define DT_N_S_lvgl_pointer_P_invert_x 0
#define DT_N_S_lvgl_pointer_P_invert_x_EXISTS 1
#define DT_N_S_lvgl_pointer_P_invert_y 0
#define DT_N_S_lvgl_pointer_P_invert_y_EXISTS 1
#define DT_N_S_lvgl_pointer_P_input DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0 DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM(fn) fn(DT_N_S_lvgl_pointer, input, 0)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_lvgl_pointer, input, 0)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_lvgl_pointer, input, 0, __VA_ARGS__)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_lvgl_pointer, input, 0, __VA_ARGS__)
#define DT_N_S_lvgl_pointer_P_input_LEN 1
#define DT_N_S_lvgl_pointer_P_input_EXISTS 1

/*
 * Devicetree node: /m5stack_mbus_connector
 *
 * Node identifier: DT_N_S_m5stack_mbus_connector
 *
 * Binding (compatible = m5stack,mbus-header):
 *   $ZEPHYR_BASE/dts/bindings/gpio/m5stack,mbus-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_m5stack_mbus_connector_PATH "/m5stack_mbus_connector"

/* Node's name with unit-address: */
#define DT_N_S_m5stack_mbus_connector_FULL_NAME "m5stack_mbus_connector"
#define DT_N_S_m5stack_mbus_connector_FULL_NAME_UNQUOTED m5stack_mbus_connector
#define DT_N_S_m5stack_mbus_connector_FULL_NAME_TOKEN m5stack_mbus_connector
#define DT_N_S_m5stack_mbus_connector_FULL_NAME_UPPER_TOKEN M5STACK_MBUS_CONNECTOR

/* Node parent (/) identifier: */
#define DT_N_S_m5stack_mbus_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_m5stack_mbus_connector_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_m5stack_mbus_connector_NODELABEL_NUM 1
#define DT_N_S_m5stack_mbus_connector_FOREACH_NODELABEL(fn) fn(m5stack_mbus_header)
#define DT_N_S_m5stack_mbus_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(m5stack_mbus_header, __VA_ARGS__)
#define DT_N_S_m5stack_mbus_connector_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_m5stack_mbus_connector_CHILD_NUM 0
#define DT_N_S_m5stack_mbus_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD(fn) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_m5stack_mbus_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_m5stack_mbus_connector_HASH upN7LZohZJsK2lpFvVVKCJIbu0DIdF7EZlGN2tIV_iI

/* Node's dependency ordinal: */
#define DT_N_S_m5stack_mbus_connector_ORD 20
#define DT_N_S_m5stack_mbus_connector_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_m5stack_mbus_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_m5stack_mbus_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_m5stack_mbus_connector_EXISTS 1
#define DT_N_INST_0_m5stack_mbus_header    DT_N_S_m5stack_mbus_connector
#define DT_N_NODELABEL_m5stack_mbus_header DT_N_S_m5stack_mbus_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_m5stack_mbus_connector_REG_NUM 0
#define DT_N_S_m5stack_mbus_connector_RANGES_NUM 0
#define DT_N_S_m5stack_mbus_connector_FOREACH_RANGE(fn) 
#define DT_N_S_m5stack_mbus_connector_IRQ_NUM 0
#define DT_N_S_m5stack_mbus_connector_IRQ_LEVEL 0
#define DT_N_S_m5stack_mbus_connector_COMPAT_MATCHES_m5stack_mbus_header 1
#define DT_N_S_m5stack_mbus_connector_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_COMPAT_VENDOR_IDX_0 "M5Stack"
#define DT_N_S_m5stack_mbus_connector_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_COMPAT_MODEL_IDX_0 "mbus-header"
#define DT_N_S_m5stack_mbus_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_m5stack_mbus_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_m5stack_mbus_connector_P_compatible {"m5stack,mbus-header"}
#define DT_N_S_m5stack_mbus_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_P_compatible_IDX_0 "m5stack,mbus-header"
#define DT_N_S_m5stack_mbus_connector_P_compatible_IDX_0_STRING_UNQUOTED m5stack,mbus-header
#define DT_N_S_m5stack_mbus_connector_P_compatible_IDX_0_STRING_TOKEN m5stack_mbus_header
#define DT_N_S_m5stack_mbus_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN M5STACK_MBUS_HEADER
#define DT_N_S_m5stack_mbus_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_m5stack_mbus_connector, compatible, 0)
#define DT_N_S_m5stack_mbus_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_m5stack_mbus_connector, compatible, 0)
#define DT_N_S_m5stack_mbus_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_m5stack_mbus_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_m5stack_mbus_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_m5stack_mbus_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_m5stack_mbus_connector_P_compatible_LEN 1
#define DT_N_S_m5stack_mbus_connector_P_compatible_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_P_zephyr_deferred_init 0
#define DT_N_S_m5stack_mbus_connector_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_P_wakeup_source 0
#define DT_N_S_m5stack_mbus_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_m5stack_mbus_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_m5stack_mbus_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mdio
 *
 * Node identifier: DT_N_S_mdio
 *
 * Binding (compatible = espressif,esp32-mdio):
 *   $ZEPHYR_BASE/dts/bindings/mdio/espressif,esp32-mdio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mdio_PATH "/mdio"

/* Node's name with unit-address: */
#define DT_N_S_mdio_FULL_NAME "mdio"
#define DT_N_S_mdio_FULL_NAME_UNQUOTED mdio
#define DT_N_S_mdio_FULL_NAME_TOKEN mdio
#define DT_N_S_mdio_FULL_NAME_UPPER_TOKEN MDIO

/* Node parent (/) identifier: */
#define DT_N_S_mdio_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mdio_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_mdio_NODELABEL_NUM 1
#define DT_N_S_mdio_FOREACH_NODELABEL(fn) fn(mdio)
#define DT_N_S_mdio_FOREACH_NODELABEL_VARGS(fn, ...) fn(mdio, __VA_ARGS__)
#define DT_N_S_mdio_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mdio_CHILD_NUM 0
#define DT_N_S_mdio_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mdio_FOREACH_CHILD(fn) 
#define DT_N_S_mdio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mdio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_mdio_HASH xt91oVS7cVTTxIZqe2BrdG8x0PI3kn9Sz5niPB_TkJc

/* Node's dependency ordinal: */
#define DT_N_S_mdio_ORD 21
#define DT_N_S_mdio_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mdio_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mdio_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mdio_EXISTS 1
#define DT_N_INST_0_espressif_esp32_mdio DT_N_S_mdio
#define DT_N_NODELABEL_mdio              DT_N_S_mdio

/* Macros for properties that are special in the specification: */
#define DT_N_S_mdio_REG_NUM 0
#define DT_N_S_mdio_RANGES_NUM 0
#define DT_N_S_mdio_FOREACH_RANGE(fn) 
#define DT_N_S_mdio_IRQ_NUM 0
#define DT_N_S_mdio_IRQ_LEVEL 0
#define DT_N_S_mdio_COMPAT_MATCHES_espressif_esp32_mdio 1
#define DT_N_S_mdio_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mdio_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_mdio_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mdio_COMPAT_MODEL_IDX_0 "esp32-mdio"
#define DT_N_S_mdio_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mdio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mdio_P_suppress_preamble 0
#define DT_N_S_mdio_P_suppress_preamble_EXISTS 1
#define DT_N_S_mdio_P_clock_frequency 2500000
#define DT_N_S_mdio_P_clock_frequency_EXISTS 1
#define DT_N_S_mdio_P_status "disabled"
#define DT_N_S_mdio_P_status_STRING_UNQUOTED disabled
#define DT_N_S_mdio_P_status_STRING_TOKEN disabled
#define DT_N_S_mdio_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_mdio_P_status_IDX_0 "disabled"
#define DT_N_S_mdio_P_status_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_mdio_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, status, 0)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, status, 0)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_status_LEN 1
#define DT_N_S_mdio_P_status_EXISTS 1
#define DT_N_S_mdio_P_compatible {"espressif,esp32-mdio"}
#define DT_N_S_mdio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_compatible_IDX_0 "espressif,esp32-mdio"
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mdio
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mdio
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MDIO
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, compatible, 0)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, compatible, 0)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_compatible_LEN 1
#define DT_N_S_mdio_P_compatible_EXISTS 1
#define DT_N_S_mdio_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_mdio_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_mdio_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, clocks, 0)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, clocks, 0)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, clocks, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, clocks, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_clocks_LEN 1
#define DT_N_S_mdio_P_clocks_EXISTS 1
#define DT_N_S_mdio_P_zephyr_deferred_init 0
#define DT_N_S_mdio_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mdio_P_wakeup_source 0
#define DT_N_S_mdio_P_wakeup_source_EXISTS 1
#define DT_N_S_mdio_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mdio_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /wifi
 *
 * Node identifier: DT_N_S_wifi
 *
 * Binding (compatible = espressif,esp32-wifi):
 *   $ZEPHYR_BASE/dts/bindings/wifi/espressif,esp32-wifi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_wifi_PATH "/wifi"

/* Node's name with unit-address: */
#define DT_N_S_wifi_FULL_NAME "wifi"
#define DT_N_S_wifi_FULL_NAME_UNQUOTED wifi
#define DT_N_S_wifi_FULL_NAME_TOKEN wifi
#define DT_N_S_wifi_FULL_NAME_UPPER_TOKEN WIFI

/* Node parent (/) identifier: */
#define DT_N_S_wifi_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_wifi_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_wifi_NODELABEL_NUM 1
#define DT_N_S_wifi_FOREACH_NODELABEL(fn) fn(wifi)
#define DT_N_S_wifi_FOREACH_NODELABEL_VARGS(fn, ...) fn(wifi, __VA_ARGS__)
#define DT_N_S_wifi_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_wifi_CHILD_NUM 0
#define DT_N_S_wifi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_wifi_FOREACH_CHILD(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_wifi_HASH rr0vN_kubTtnlX0gdAC83Y08AGdecB14WmkrlyFB8RE

/* Node's dependency ordinal: */
#define DT_N_S_wifi_ORD 22
#define DT_N_S_wifi_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_wifi_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_wifi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_wifi_EXISTS 1
#define DT_N_INST_0_espressif_esp32_wifi DT_N_S_wifi
#define DT_N_NODELABEL_wifi              DT_N_S_wifi

/* Macros for properties that are special in the specification: */
#define DT_N_S_wifi_REG_NUM 0
#define DT_N_S_wifi_RANGES_NUM 0
#define DT_N_S_wifi_FOREACH_RANGE(fn) 
#define DT_N_S_wifi_IRQ_NUM 0
#define DT_N_S_wifi_IRQ_LEVEL 0
#define DT_N_S_wifi_COMPAT_MATCHES_espressif_esp32_wifi 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0 "esp32-wifi"
#define DT_N_S_wifi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_wifi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_wifi_P_compatible {"espressif,esp32-wifi"}
#define DT_N_S_wifi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_compatible_IDX_0 "espressif,esp32-wifi"
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WIFI
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_LEN 1
#define DT_N_S_wifi_P_compatible_EXISTS 1
#define DT_N_S_wifi_P_status "disabled"
#define DT_N_S_wifi_P_status_STRING_UNQUOTED disabled
#define DT_N_S_wifi_P_status_STRING_TOKEN disabled
#define DT_N_S_wifi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_wifi_P_status_IDX_0 "disabled"
#define DT_N_S_wifi_P_status_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_wifi_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_LEN 1
#define DT_N_S_wifi_P_status_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 3
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 23
#define DT_N_S_cpus_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	24, /* /cpus/power-states */ \
	27, /* /cpus/cpu@0 */ \
	28, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"
#define DT_N_S_cpus_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_cpus_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_cpus_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_HASH qMexuiO6C_SHOSQQCC_3by3odasm1z5VRx723zYLVgY

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 24
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	23, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	25, /* /cpus/power-states/deep_sleep */ \
	26, /* /cpus/power-states/light_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/deep_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_deep_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PATH "/cpus/power-states/deep_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME "deep_sleep"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UNQUOTED deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_TOKEN deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UPPER_TOKEN DEEP_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL(fn) fn(deep_sleep)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_HASH C7SKg2fWhdBJ3bgnNKxXYtXGHxBOLRajGXBHhDGlgA0

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD 25
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REQUIRES_ORDS \
	24, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_SUPPORTS_ORDS \
	27, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_NODELABEL_deep_sleep      DT_N_S_cpus_S_power_states_S_deep_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UNQUOTED soft-off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_TOKEN soft_off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UPPER_TOKEN SOFT_OFF
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0 "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_IDX 6
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_VAL_soft_off_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us 2000
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us 212
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/light_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_light_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PATH "/cpus/power-states/light_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME "light_sleep"
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UNQUOTED light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_TOKEN light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UPPER_TOKEN LIGHT_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL(fn) fn(light_sleep)
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(light_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_HASH trFhKUS39giGuBIU4RugUjCmoAFGXREORn8cmi85czc

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD 26
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REQUIRES_ORDS \
	24, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_SUPPORTS_ORDS \
	27, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_NODELABEL_light_sleep     DT_N_S_cpus_S_power_states_S_light_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_light_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0 "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_IDX 3
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us 200
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us 60
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = espressif,xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx6.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 27
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	23, /* /cpus */ \
	25, /* /cpus/power-states/deep_sleep */ \
	26, /* /cpus/power-states/light_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_espressif_xtensa_lx6 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0              DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_espressif_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "xtensa-lx6"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_source 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"espressif,xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "espressif,xtensa-lx6"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx6
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx6
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX6
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = espressif,xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx6.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) fn(cpu1)
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_HASH 9JjWVNk3G1ibyc8ZwlqKxfoxH3N71yBfTFpYJTDe_oU

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 28
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	23, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_espressif_xtensa_lx6 DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1              DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_espressif_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "xtensa-lx6"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_clock_source 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible {"espressif,xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "espressif,xtensa-lx6"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx6
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx6
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX6
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_pwr)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_pwr)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_pwr)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_pwr)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 29
#define DT_N_S_leds_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	30, /* /leds/led_pwr */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_pwr
 *
 * Node identifier: DT_N_S_leds_S_led_pwr
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_pwr_PATH "/leds/led_pwr"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_pwr_FULL_NAME "led_pwr"
#define DT_N_S_leds_S_led_pwr_FULL_NAME_UNQUOTED led_pwr
#define DT_N_S_leds_S_led_pwr_FULL_NAME_TOKEN led_pwr
#define DT_N_S_leds_S_led_pwr_FULL_NAME_UPPER_TOKEN LED_PWR

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_pwr_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_pwr_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_pwr_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_pwr_FOREACH_NODELABEL(fn) fn(led_pwr)
#define DT_N_S_leds_S_led_pwr_FOREACH_NODELABEL_VARGS(fn, ...) fn(led_pwr, __VA_ARGS__)
#define DT_N_S_leds_S_led_pwr_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_pwr_CHILD_NUM 0
#define DT_N_S_leds_S_led_pwr_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_pwr_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_pwr_HASH J9QoZeT0UyJH5NLWDaJDMuvR9V95ab3SrRKPE62x3Fw

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_pwr_ORD 30
#define DT_N_S_leds_S_led_pwr_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_pwr_REQUIRES_ORDS \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_pwr_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_pwr_EXISTS 1
#define DT_N_ALIAS_led0        DT_N_S_leds_S_led_pwr
#define DT_N_NODELABEL_led_pwr DT_N_S_leds_S_led_pwr

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_pwr_REG_NUM 0
#define DT_N_S_leds_S_led_pwr_RANGES_NUM 0
#define DT_N_S_leds_S_led_pwr_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_pwr_IRQ_NUM 0
#define DT_N_S_leds_S_led_pwr_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_pwr_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_pwr_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_VAL_flags 7
#define DT_N_S_leds_S_led_pwr_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_pwr_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_pwr, gpios, 0)
#define DT_N_S_leds_S_led_pwr_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_pwr, gpios, 0)
#define DT_N_S_leds_S_led_pwr_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_pwr, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_pwr_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_pwr, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_pwr_P_gpios_LEN 1
#define DT_N_S_leds_S_led_pwr_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_pwr_P_label "Power LED"
#define DT_N_S_leds_S_led_pwr_P_label_STRING_UNQUOTED Power LED
#define DT_N_S_leds_S_led_pwr_P_label_STRING_TOKEN Power_LED
#define DT_N_S_leds_S_led_pwr_P_label_STRING_UPPER_TOKEN POWER_LED
#define DT_N_S_leds_S_led_pwr_P_label_IDX_0 "Power LED"
#define DT_N_S_leds_S_led_pwr_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_pwr_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_pwr, label, 0)
#define DT_N_S_leds_S_led_pwr_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_pwr, label, 0)
#define DT_N_S_leds_S_led_pwr_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_pwr, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_pwr_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_pwr, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_pwr_P_label_LEN 1
#define DT_N_S_leds_S_led_pwr_P_label_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_PATH "/pin-controller/spim3_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME "spim3_default"
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UNQUOTED spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_TOKEN spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UPPER_TOKEN SPIM3_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL(fn) fn(spim3_default)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spim3_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_HASH Nj2frB1v9UxewzwdRbOJzSexWBAxllDEfZwFjTkVzHQ

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_ORD 31
#define DT_N_S_pin_controller_S_spim3_default_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_SUPPORTS_ORDS \
	32, /* /soc/spi@3ff65000 */ \
	42, /* /pin-controller/spim3_default/group1 */ \
	43, /* /pin-controller/spim3_default/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_EXISTS 1
#define DT_N_NODELABEL_spim3_default DT_N_S_pin_controller_S_spim3_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/spi@3ff65000
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff65000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff65000_PATH "/soc/spi@3ff65000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME "spi@3ff65000"
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_UNQUOTED spi@3ff65000
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_TOKEN spi_3ff65000
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_UPPER_TOKEN SPI_3FF65000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_3ff65000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff65000_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff65000_NODELABEL_NUM 2
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_NODELABEL(fn) fn(spi3) fn(m5stack_mbus_spi)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__) fn(m5stack_mbus_spi, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff65000_CHILD_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff65000_HASH tKfyq4D5f6VWFu6qbaNPBnrxMXKbM0aeSMVcqkSr5Ms

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff65000_ORD 32
#define DT_N_S_soc_S_spi_3ff65000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff65000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	8, /* /soc/gpio/gpio@3ff44000 */ \
	31, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff65000_SUPPORTS_ORDS \
	33, /* /mipi_dbi */ \
	105, /* /soc/spi@3ff65000/sd@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff65000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_spi DT_N_S_soc_S_spi_3ff65000
#define DT_N_NODELABEL_spi3             DT_N_S_soc_S_spi_3ff65000
#define DT_N_NODELABEL_m5stack_mbus_spi DT_N_S_soc_S_spi_3ff65000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff65000_REG_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_VAL_ADDRESS 1073106944 /* 0x3ff65000 */
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_3ff65000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff65000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_3ff65000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spim3_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff65000_P_reg {1073106944 /* 0x3ff65000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_0 1073106944
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_3ff65000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_half_duplex 0
#define DT_N_S_soc_S_spi_3ff65000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_3ff65000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_sio 0
#define DT_N_S_soc_S_spi_3ff65000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_enabled 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_clk 19
#define DT_N_S_soc_S_spi_3ff65000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_host 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_3ff65000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_positive_cs 0
#define DT_N_S_soc_S_spi_3ff65000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_use_iomux 0
#define DT_N_S_soc_S_spi_3ff65000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_3ff65000_P_line_idle_low_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clock_frequency 20000000
#define DT_N_S_soc_S_spi_3ff65000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_VAL_pin 5
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_VAL_pin 4
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 0) \
	fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 1)
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 1)
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_3ff65000, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_LEN 2
#define DT_N_S_soc_S_spi_3ff65000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status "okay"
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_VAL_offset 18
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff65000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mipi_dbi
 *
 * Node identifier: DT_N_S_mipi_dbi
 *
 * Binding (compatible = zephyr,mipi-dbi-spi):
 *   $ZEPHYR_BASE/dts/bindings/mipi-dbi/zephyr,mipi-dbi-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mipi_dbi_PATH "/mipi_dbi"

/* Node's name with unit-address: */
#define DT_N_S_mipi_dbi_FULL_NAME "mipi_dbi"
#define DT_N_S_mipi_dbi_FULL_NAME_UNQUOTED mipi_dbi
#define DT_N_S_mipi_dbi_FULL_NAME_TOKEN mipi_dbi
#define DT_N_S_mipi_dbi_FULL_NAME_UPPER_TOKEN MIPI_DBI

/* Node parent (/) identifier: */
#define DT_N_S_mipi_dbi_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mipi_dbi_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_mipi_dbi_NODELABEL_NUM 0
#define DT_N_S_mipi_dbi_FOREACH_NODELABEL(fn) 
#define DT_N_S_mipi_dbi_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_mipi_dbi_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mipi_dbi_CHILD_NUM 1
#define DT_N_S_mipi_dbi_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_mipi_dbi_FOREACH_CHILD(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_mipi_dbi_HASH HR9M_Ak5V_PEmV_u05dm7ejxtjZ4Wfg7SHt0Qt4gcQc

/* Node's dependency ordinal: */
#define DT_N_S_mipi_dbi_ORD 33
#define DT_N_S_mipi_dbi_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mipi_dbi_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/gpio/gpio@3ff44000 */ \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */ \
	32, /* /soc/spi@3ff65000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mipi_dbi_SUPPORTS_ORDS \
	36, /* /mipi_dbi/ili9342c@0 */

/* Existence and alternate IDs: */
#define DT_N_S_mipi_dbi_EXISTS 1
#define DT_N_INST_0_zephyr_mipi_dbi_spi DT_N_S_mipi_dbi

/* Macros for properties that are special in the specification: */
#define DT_N_S_mipi_dbi_REG_NUM 0
#define DT_N_S_mipi_dbi_RANGES_NUM 0
#define DT_N_S_mipi_dbi_FOREACH_RANGE(fn) 
#define DT_N_S_mipi_dbi_IRQ_NUM 0
#define DT_N_S_mipi_dbi_IRQ_LEVEL 0
#define DT_N_S_mipi_dbi_COMPAT_MATCHES_zephyr_mipi_dbi_spi 1
#define DT_N_S_mipi_dbi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_mipi_dbi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_COMPAT_MODEL_IDX_0 "mipi-dbi-spi"
#define DT_N_S_mipi_dbi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mipi_dbi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mipi_dbi_P_spi_dev DT_N_S_soc_S_spi_3ff65000
#define DT_N_S_mipi_dbi_P_spi_dev_IDX_0 DT_N_S_soc_S_spi_3ff65000
#define DT_N_S_mipi_dbi_P_spi_dev_IDX_0_PH DT_N_S_soc_S_spi_3ff65000
#define DT_N_S_mipi_dbi_P_spi_dev_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_P_spi_dev_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi, spi_dev, 0)
#define DT_N_S_mipi_dbi_P_spi_dev_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi, spi_dev, 0)
#define DT_N_S_mipi_dbi_P_spi_dev_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi, spi_dev, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_spi_dev_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi, spi_dev, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_spi_dev_LEN 1
#define DT_N_S_mipi_dbi_P_spi_dev_EXISTS 1
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_VAL_pin 15
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_VAL_flags 0
#define DT_N_S_mipi_dbi_P_dc_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mipi_dbi_P_dc_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi, dc_gpios, 0)
#define DT_N_S_mipi_dbi_P_dc_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi, dc_gpios, 0)
#define DT_N_S_mipi_dbi_P_dc_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi, dc_gpios, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_dc_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi, dc_gpios, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_dc_gpios_LEN 1
#define DT_N_S_mipi_dbi_P_dc_gpios_EXISTS 1
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_VAL_pin 4
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_VAL_flags 7
#define DT_N_S_mipi_dbi_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mipi_dbi_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi, reset_gpios, 0)
#define DT_N_S_mipi_dbi_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi, reset_gpios, 0)
#define DT_N_S_mipi_dbi_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_reset_gpios_LEN 1
#define DT_N_S_mipi_dbi_P_reset_gpios_EXISTS 1
#define DT_N_S_mipi_dbi_P_xfr_min_bits "MIPI_DBI_SPI_XFR_8BIT"
#define DT_N_S_mipi_dbi_P_xfr_min_bits_STRING_UNQUOTED MIPI_DBI_SPI_XFR_8BIT
#define DT_N_S_mipi_dbi_P_xfr_min_bits_STRING_TOKEN MIPI_DBI_SPI_XFR_8BIT
#define DT_N_S_mipi_dbi_P_xfr_min_bits_STRING_UPPER_TOKEN MIPI_DBI_SPI_XFR_8BIT
#define DT_N_S_mipi_dbi_P_xfr_min_bits_IDX_0 "MIPI_DBI_SPI_XFR_8BIT"
#define DT_N_S_mipi_dbi_P_xfr_min_bits_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_P_xfr_min_bits_IDX_0_ENUM_IDX 0
#define DT_N_S_mipi_dbi_P_xfr_min_bits_IDX_0_ENUM_VAL_MIPI_DBI_SPI_XFR_8BIT_EXISTS 1
#define DT_N_S_mipi_dbi_P_xfr_min_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi, xfr_min_bits, 0)
#define DT_N_S_mipi_dbi_P_xfr_min_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi, xfr_min_bits, 0)
#define DT_N_S_mipi_dbi_P_xfr_min_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi, xfr_min_bits, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_xfr_min_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi, xfr_min_bits, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_xfr_min_bits_LEN 1
#define DT_N_S_mipi_dbi_P_xfr_min_bits_EXISTS 1
#define DT_N_S_mipi_dbi_P_write_only 1
#define DT_N_S_mipi_dbi_P_write_only_EXISTS 1
#define DT_N_S_mipi_dbi_P_compatible {"zephyr,mipi-dbi-spi"}
#define DT_N_S_mipi_dbi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_P_compatible_IDX_0 "zephyr,mipi-dbi-spi"
#define DT_N_S_mipi_dbi_P_compatible_IDX_0_STRING_UNQUOTED zephyr,mipi-dbi-spi
#define DT_N_S_mipi_dbi_P_compatible_IDX_0_STRING_TOKEN zephyr_mipi_dbi_spi
#define DT_N_S_mipi_dbi_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MIPI_DBI_SPI
#define DT_N_S_mipi_dbi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi, compatible, 0)
#define DT_N_S_mipi_dbi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi, compatible, 0)
#define DT_N_S_mipi_dbi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi, compatible, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi, compatible, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_P_compatible_LEN 1
#define DT_N_S_mipi_dbi_P_compatible_EXISTS 1
#define DT_N_S_mipi_dbi_P_zephyr_deferred_init 0
#define DT_N_S_mipi_dbi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mipi_dbi_P_wakeup_source 0
#define DT_N_S_mipi_dbi_P_wakeup_source_EXISTS 1
#define DT_N_S_mipi_dbi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mipi_dbi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_regulator
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator
 *
 * Binding (compatible = x-powers,axp192-regulator):
 *   $ZEPHYR_BASE/dts/bindings/regulator/x-powers,axp192-regulator.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_PATH "/soc/i2c@3ff53000/axp192@34/axp192_regulator"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FULL_NAME "axp192_regulator"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FULL_NAME_UNQUOTED axp192_regulator
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FULL_NAME_TOKEN axp192_regulator
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FULL_NAME_UPPER_TOKEN AXP192_REGULATOR

/* Node parent (/soc/i2c@3ff53000/axp192@34) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_NODELABEL(fn) fn(axp192_regulator)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_NODELABEL_VARGS(fn, ...) fn(axp192_regulator, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_CHILD_NUM 4
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_HASH 3sS5LTUap5XpukBRGyUlOsx_wlkwHlPqUUBFI3Rsr3M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_ORD 34
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_REQUIRES_ORDS \
	10, /* /soc/i2c@3ff53000/axp192@34 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_SUPPORTS_ORDS \
	35, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC3 */ \
	99, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC1 */ \
	100, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO2 */ \
	101, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_EXISTS 1
#define DT_N_INST_0_x_powers_axp192_regulator DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator
#define DT_N_NODELABEL_axp192_regulator       DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_COMPAT_MATCHES_x_powers_axp192_regulator 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_COMPAT_VENDOR_IDX_0 "X-Powers"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_COMPAT_MODEL_IDX_0 "axp192-regulator"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible {"x-powers,axp192-regulator"}
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_IDX_0 "x-powers,axp192-regulator"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_IDX_0_STRING_UNQUOTED x-powers,axp192-regulator
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_IDX_0_STRING_TOKEN x_powers_axp192_regulator
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_IDX_0_STRING_UPPER_TOKEN X_POWERS_AXP192_REGULATOR
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC3
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_PATH "/soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FULL_NAME "DCDC3"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FULL_NAME_UNQUOTED DCDC3
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FULL_NAME_TOKEN DCDC3
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FULL_NAME_UPPER_TOKEN DCDC3

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_regulator) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_NODELABEL(fn) fn(lcd_bg)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_NODELABEL_VARGS(fn, ...) fn(lcd_bg, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_HASH JCUe_I1GRj_UzsLVi_Jhv3GO4jnMAjkeFsrKcFqjE4g

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_ORD 35
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_REQUIRES_ORDS \
	34, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_SUPPORTS_ORDS \
	36, /* /mipi_dbi/ili9342c@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_EXISTS 1
#define DT_N_NODELABEL_lcd_bg DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_initial_mode 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_initial_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_initial_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_initial_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_initial_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_init_microvolt 2800000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_init_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_min_microvolt 2500000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_min_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_max_microvolt 3300000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_max_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_always_on 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_always_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_boot_on 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_boot_off 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3_P_regulator_boot_off_EXISTS 1

/*
 * Devicetree node: /mipi_dbi/ili9342c@0
 *
 * Node identifier: DT_N_S_mipi_dbi_S_ili9342c_0
 *
 * Binding (compatible = ilitek,ili9342c):
 *   $ZEPHYR_BASE/dts/bindings/display/ilitek,ili9342c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_PATH "/mipi_dbi/ili9342c@0"

/* Node's name with unit-address: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_FULL_NAME "ili9342c@0"
#define DT_N_S_mipi_dbi_S_ili9342c_0_FULL_NAME_UNQUOTED ili9342c@0
#define DT_N_S_mipi_dbi_S_ili9342c_0_FULL_NAME_TOKEN ili9342c_0
#define DT_N_S_mipi_dbi_S_ili9342c_0_FULL_NAME_UPPER_TOKEN ILI9342C_0

/* Node parent (/mipi_dbi) identifier: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_PARENT DT_N_S_mipi_dbi

/* Node's index in its parent's list of children: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_NODELABEL_NUM 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_NODELABEL(fn) fn(ili9342c)
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ili9342c, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_mipi_dbi) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mipi_dbi_S_ili9342c_0_CHILD_NUM 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD(fn) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_HASH fQ_naBX5ff6G8u_5ST_Z_Nxc_SsOt98SVJQ4NkkxOEs

/* Node's dependency ordinal: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_ORD 36
#define DT_N_S_mipi_dbi_S_ili9342c_0_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_REQUIRES_ORDS \
	33, /* /mipi_dbi */ \
	35, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_EXISTS 1
#define DT_N_INST_0_ilitek_ili9342c DT_N_S_mipi_dbi_S_ili9342c_0
#define DT_N_NODELABEL_ili9342c     DT_N_S_mipi_dbi_S_ili9342c_0

/* Bus info (controller: '/mipi_dbi', type: '['mipi-dbi']') */
#define DT_N_S_mipi_dbi_S_ili9342c_0_BUS_mipi_dbi 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_BUS DT_N_S_mipi_dbi

/* Macros for properties that are special in the specification: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_REG_NUM 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_REG_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_mipi_dbi_S_ili9342c_0_RANGES_NUM 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_FOREACH_RANGE(fn) 
#define DT_N_S_mipi_dbi_S_ili9342c_0_IRQ_NUM 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_IRQ_LEVEL 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_COMPAT_MATCHES_ilitek_ili9342c 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_COMPAT_VENDOR_IDX_0 "ILI Technology Corporation (ILITEK)"
#define DT_N_S_mipi_dbi_S_ili9342c_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_COMPAT_MODEL_IDX_0 "ili9342c"
#define DT_N_S_mipi_dbi_S_ili9342c_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset {1 /* 0x1 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_IDX_0 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, gamset, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, gamset, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, gamset, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, gamset, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_gamset_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode {64 /* 0x40 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_IDX_0 64
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifmode, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifmode, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifmode, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifmode, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifmode_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr {0 /* 0x0 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, invtr, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, invtr, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, invtr, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, invtr, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_invtr_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1 {0 /* 0x0 */, 28 /* 0x1c */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_IDX_1 28
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 1)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 1)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 1, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, frmctr1, 1, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_LEN 2
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_frmctr1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl {10 /* 0xa */, 128 /* 0x80 */, 29 /* 0x1d */, 4 /* 0x4 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_0 10
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_1 128
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_2_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_2 29
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_3_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_IDX_3 4
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 1) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 2) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 3)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 3)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 3, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, disctrl, 3, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_LEN 4
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_disctrl_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod {7 /* 0x7 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_IDX_0 7
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, etmod, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, etmod, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, etmod, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, etmod, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_etmod_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1 {9 /* 0x9 */, 9 /* 0x9 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_IDX_0 9
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_IDX_1 9
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 1)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 1)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 1, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl1, 1, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_LEN 2
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2 {0 /* 0x0 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl2, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl2, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl2, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl2, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl2_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3 {178 /* 0xb2 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_IDX_0 178
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl3, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl3, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl3, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pwctrl3, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pwctrl3_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1 {242 /* 0xf2 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_IDX_0 242
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vmctrl1, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vmctrl1, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vmctrl1, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vmctrl1, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vmctrl1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl {0 /* 0x0 */, 5 /* 0x5 */, 8 /* 0x8 */, 4 /* 0x4 */, 19 /* 0x13 */, 10 /* 0xa */, 52 /* 0x34 */, 138 /* 0x8a */, 70 /* 0x46 */, 7 /* 0x7 */, 14 /* 0xe */, 10 /* 0xa */, 27 /* 0x1b */, 29 /* 0x1d */, 15 /* 0xf */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_1 5
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_2_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_2 8
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_3_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_3 4
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_4_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_4 19
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_5_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_5 10
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_6_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_6 52
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_7_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_7 138
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_8_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_8 70
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_9_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_9 7
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_10_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_10 14
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_11_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_11 10
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_12_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_12 27
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_13_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_13 29
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_14_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_IDX_14 15
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 1) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 2) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 3) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 4) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 5) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 6) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 7) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 8) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 9) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 10) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 11) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 12) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 13) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 14)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 14)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 14, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, pgamctrl, 14, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_LEN 15
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pgamctrl_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl {0 /* 0x0 */, 34 /* 0x22 */, 37 /* 0x25 */, 4 /* 0x4 */, 15 /* 0xf */, 6 /* 0x6 */, 56 /* 0x38 */, 86 /* 0x56 */, 75 /* 0x4b */, 5 /* 0x5 */, 12 /* 0xc */, 10 /* 0xa */, 55 /* 0x37 */, 58 /* 0x3a */, 15 /* 0xf */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_1 34
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_2_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_2 37
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_3_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_3 4
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_4_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_4 15
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_5_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_5 6
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_6_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_6 56
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_7_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_7 86
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_8_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_8 75
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_9_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_9 5
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_10_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_10 12
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_11_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_11 10
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_12_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_12 55
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_13_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_13 58
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_14_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_IDX_14 15
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 1) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 2) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 3) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 4) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 5) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 6) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 7) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 8) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 9) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 10) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 11) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 12) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 13) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 14)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 14)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 14, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ngamctrl, 14, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_LEN 15
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ngamctrl_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl {1 /* 0x1 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_0 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_1_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_1 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_2_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_IDX_2 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 0) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 1) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 2)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 2)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 0, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 1, __VA_ARGS__) \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 2, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_mipi_dbi_S_ili9342c_0, ifctl, 2, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_LEN 3
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_ifctl_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pixel_format 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pixel_format_IDX_0_ENUM_IDX 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pixel_format_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pixel_format_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_pixel_format_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_rotation 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_rotation_IDX_0_ENUM_IDX 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_rotation_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_rotation_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_rotation_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_display_inversion 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_display_inversion_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_duplex 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_duplex_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_cpol 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_cpol_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_cpha 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_cpha_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_hold_cs 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_hold_cs_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_max_frequency 30000000
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_mipi_max_frequency_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode "MIPI_DBI_TE_NO_EDGE"
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_STRING_UNQUOTED MIPI_DBI_TE_NO_EDGE
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_STRING_TOKEN MIPI_DBI_TE_NO_EDGE
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_STRING_UPPER_TOKEN MIPI_DBI_TE_NO_EDGE
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_IDX_0 "MIPI_DBI_TE_NO_EDGE"
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_IDX_0_ENUM_VAL_MIPI_DBI_TE_NO_EDGE_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, te_mode, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, te_mode, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, te_mode, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, te_mode, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_mode_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_delay 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_te_delay_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible {"ilitek,ili9342c"}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_IDX_0 "ilitek,ili9342c"
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_IDX_0_STRING_UNQUOTED ilitek,ili9342c
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_IDX_0_STRING_TOKEN ilitek_ili9342c
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ILITEK_ILI9342C
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, compatible, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, compatible, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_compatible_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_reg {0 /* 0x0 */}
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_reg_IDX_0 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_reg_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_zephyr_deferred_init 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_wakeup_source 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_wakeup_source_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_IDX_0 DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_IDX_0_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vin_supply, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vin_supply, 0)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vin_supply, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, vin_supply, 0, __VA_ARGS__)
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_LEN 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_vin_supply_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_height 240
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_height_EXISTS 1
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_width 320
#define DT_N_S_mipi_dbi_S_ili9342c_0_P_width_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart2_rx_gpio13
 *
 * Node identifier: DT_N_S_pin_controller_S_uart2_rx_gpio13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_PATH "/pin-controller/uart2_rx_gpio13"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FULL_NAME "uart2_rx_gpio13"
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FULL_NAME_UNQUOTED uart2_rx_gpio13
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FULL_NAME_TOKEN uart2_rx_gpio13
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FULL_NAME_UPPER_TOKEN UART2_RX_GPIO13

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_NODELABEL(fn) fn(uart2_rx_gpio13)
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2_rx_gpio13, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_HASH vNprswpqkmY12mrL4Na6U3Tgwp29wS5UOXgjAUYop1o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_ORD 37
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_EXISTS 1
#define DT_N_NODELABEL_uart2_rx_gpio13 DT_N_S_pin_controller_S_uart2_rx_gpio13

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_REG_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio13_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart2_rx_gpio14
 *
 * Node identifier: DT_N_S_pin_controller_S_uart2_rx_gpio14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_PATH "/pin-controller/uart2_rx_gpio14"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FULL_NAME "uart2_rx_gpio14"
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FULL_NAME_UNQUOTED uart2_rx_gpio14
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FULL_NAME_TOKEN uart2_rx_gpio14
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FULL_NAME_UPPER_TOKEN UART2_RX_GPIO14

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_NODELABEL(fn) fn(uart2_tx_gpio14)
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2_tx_gpio14, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_HASH 9YU9SKFeUzmQN6FsaJoJ8eXlHfL1brJsx_TIdieWyhs

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_ORD 38
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_EXISTS 1
#define DT_N_NODELABEL_uart2_tx_gpio14 DT_N_S_pin_controller_S_uart2_rx_gpio14

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_REG_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart2_rx_gpio14_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_HASH _HSqkKDjPxhuu0z84CDy13StRYiLrOnhQel0xHxUxuM

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 39
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	4, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux {984981 /* 0xf0795 */, 952150 /* 0xe8756 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0 984981
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1 952150
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_PATH "/pin-controller/i2c1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME "i2c1_default"
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UNQUOTED i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_TOKEN i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UPPER_TOKEN I2C1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL(fn) fn(i2c1_default)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c1_default_HASH XO1mymgcvFsuC9DhMfptRTCQBeKGbvb0Ib2nQh8oc7M

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_ORD 40
#define DT_N_S_pin_controller_S_i2c1_default_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_SUPPORTS_ORDS \
	41, /* /pin-controller/i2c1_default/group1 */ \
	53, /* /soc/i2c@3ff67000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_EXISTS 1
#define DT_N_NODELABEL_i2c1_default DT_N_S_pin_controller_S_i2c1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PATH "/pin-controller/i2c1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c1_default) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_HASH cUGMjaLJ_EMYBWGL8KTvzJXC89iE0MLZ6zre2oO0xVA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD 41
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REQUIRES_ORDS \
	40, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux {3151904 /* 0x301820 */, 3119073 /* 0x2f97e1 */}
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0 3151904
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1 3119073
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_open_drain 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PATH "/pin-controller/spim3_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_HASH AqdKAUKce9do36D9v1XrdXGugpH6vKrmt_kRhqj_Ltg

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD 42
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REQUIRES_ORDS \
	31, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux {16748582 /* 0xff9026 */, 2097106 /* 0x1fffd2 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0 16748582
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1 2097106
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PATH "/pin-controller/spim3_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_HASH s3MzRJ1vi_Bq2UJfj__ih5Xzhc4UQC1rotuShjYEG0o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD 43
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REQUIRES_ORDS \
	31, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux {2162647 /* 0x20ffd7 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0 2162647
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@3ff48800
 *
 * Node identifier: DT_N_S_soc_S_adc_3ff48800
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_3ff48800_PATH "/soc/adc@3ff48800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME "adc@3ff48800"
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_UNQUOTED adc@3ff48800
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_TOKEN adc_3ff48800
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_UPPER_TOKEN ADC_3FF48800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_3ff48800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_3ff48800_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_3ff48800_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_3ff48800_CHILD_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_3ff48800_HASH uCEeGqIdkprpsXanVaczu_5e6QDVsQmFhscAn9v2tcE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_3ff48800_ORD 44
#define DT_N_S_soc_S_adc_3ff48800_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_3ff48800_REQUIRES_ORDS \
	2, /* /soc */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_3ff48800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_3ff48800_EXISTS 1
#define DT_N_INST_0_espressif_esp32_adc DT_N_S_soc_S_adc_3ff48800
#define DT_N_NODELABEL_adc0             DT_N_S_soc_S_adc_3ff48800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_3ff48800_REG_NUM 1
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_VAL_ADDRESS 1072990208 /* 0x3ff48800 */
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_adc_3ff48800_RANGES_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_3ff48800_IRQ_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_3ff48800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_3ff48800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_3ff48800_P_unit 1
#define DT_N_S_soc_S_adc_3ff48800_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_channel_count 8
#define DT_N_S_soc_S_adc_3ff48800_P_channel_count_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status "disabled"
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, status, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, status, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_status_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg {1072990208 /* 0x3ff48800 */, 10 /* 0xa */}
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_0 1072990208
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_1 10
#define DT_N_S_soc_S_adc_3ff48800_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_wakeup_source 0
#define DT_N_S_soc_S_adc_3ff48800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@3ff48890
 *
 * Node identifier: DT_N_S_soc_S_adc_3ff48890
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_3ff48890_PATH "/soc/adc@3ff48890"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME "adc@3ff48890"
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_UNQUOTED adc@3ff48890
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_TOKEN adc_3ff48890
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_UPPER_TOKEN ADC_3FF48890

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_3ff48890_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_3ff48890_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_3ff48890_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_3ff48890_CHILD_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_3ff48890_HASH EkFfPu17owOqwpawASPJGplBeMhUN_69TYvCH8z0BWU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_3ff48890_ORD 45
#define DT_N_S_soc_S_adc_3ff48890_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_3ff48890_REQUIRES_ORDS \
	2, /* /soc */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_3ff48890_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_3ff48890_EXISTS 1
#define DT_N_INST_1_espressif_esp32_adc DT_N_S_soc_S_adc_3ff48890
#define DT_N_NODELABEL_adc1             DT_N_S_soc_S_adc_3ff48890

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_3ff48890_REG_NUM 1
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_VAL_ADDRESS 1072990352 /* 0x3ff48890 */
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_adc_3ff48890_RANGES_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_3ff48890_IRQ_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_3ff48890_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_3ff48890_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_3ff48890_P_unit 2
#define DT_N_S_soc_S_adc_3ff48890_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_channel_count 10
#define DT_N_S_soc_S_adc_3ff48890_P_channel_count_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status "disabled"
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, status, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, status, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_status_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg {1072990352 /* 0x3ff48890 */, 10 /* 0xa */}
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_0 1072990352
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_1 10
#define DT_N_S_soc_S_adc_3ff48890_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_wakeup_source 0
#define DT_N_S_soc_S_adc_3ff48890_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/can@3ff6b000
 *
 * Node identifier: DT_N_S_soc_S_can_3ff6b000
 *
 * Binding (compatible = espressif,esp32-twai):
 *   $ZEPHYR_BASE/dts/bindings/can/espressif,esp32-twai.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_3ff6b000_PATH "/soc/can@3ff6b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME "can@3ff6b000"
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_UNQUOTED can@3ff6b000
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_TOKEN can_3ff6b000
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_UPPER_TOKEN CAN_3FF6B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_3ff6b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_3ff6b000_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_3ff6b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_NODELABEL(fn) fn(twai)
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(twai, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_3ff6b000_CHILD_NUM 0
#define DT_N_S_soc_S_can_3ff6b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_can_3ff6b000_HASH 8o9SMvvdm3zMQKic_Q5ffUpgfPX_QOQgHyHuASu3FMo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_3ff6b000_ORD 46
#define DT_N_S_soc_S_can_3ff6b000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_3ff6b000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_3ff6b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_3ff6b000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_twai DT_N_S_soc_S_can_3ff6b000
#define DT_N_NODELABEL_twai              DT_N_S_soc_S_can_3ff6b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_3ff6b000_REG_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_VAL_ADDRESS 1073131520 /* 0x3ff6b000 */
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_3ff6b000_RANGES_NUM 0
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_3ff6b000_IRQ_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MATCHES_espressif_esp32_twai 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MODEL_IDX_0 "esp32-twai"
#define DT_N_S_soc_S_can_3ff6b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_3ff6b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_3ff6b000_P_reg {1073131520 /* 0x3ff6b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_0 1073131520
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_3ff6b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_VAL_offset 22
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status "disabled"
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, status, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, status, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_status_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible {"espressif,esp32-twai"}
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0 "espressif,esp32-twai"
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-twai
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_twai
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TWAI
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_wakeup_source 0
#define DT_N_S_soc_S_can_3ff6b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f000
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f000_PATH "/soc/counter@3ff5f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME "counter@3ff5f000"
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_UNQUOTED counter@3ff5f000
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_TOKEN counter_3ff5f000
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_UPPER_TOKEN COUNTER_3FF5F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff5f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f000_HASH VmZDWmNYT9QuoaJNQ_dM__GjYTQ_aVdfXmcF1J7sKP4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f000_ORD 47
#define DT_N_S_soc_S_counter_3ff5f000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_timer DT_N_S_soc_S_counter_3ff5f000
#define DT_N_NODELABEL_timer0             DT_N_S_soc_S_counter_3ff5f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f000_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_VAL_ADDRESS 1073082368 /* 0x3ff5f000 */
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff5f000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f000_P_group 0
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index 0
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff5f000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status "okay"
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg {1073082368 /* 0x3ff5f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_0 1073082368
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f024
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f024_PATH "/soc/counter@3ff5f024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME "counter@3ff5f024"
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_UNQUOTED counter@3ff5f024
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_TOKEN counter_3ff5f024
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_UPPER_TOKEN COUNTER_3FF5F024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff5f024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f024_HASH amW_5uw_I83K0YBBxkAUo70lzRW3Pmzx7O6XKyycowA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f024_ORD 48
#define DT_N_S_soc_S_counter_3ff5f024_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f024_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f024_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f024_EXISTS 1
#define DT_N_INST_1_espressif_esp32_timer DT_N_S_soc_S_counter_3ff5f024
#define DT_N_NODELABEL_timer1             DT_N_S_soc_S_counter_3ff5f024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f024_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_VAL_ADDRESS 1073082404 /* 0x3ff5f024 */
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff5f024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f024_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f024_P_group 0
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff5f024_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status "okay"
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg {1073082404 /* 0x3ff5f024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_0 1073082404
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts {15 /* 0xf */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60000
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60000_PATH "/soc/counter@3ff60000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME "counter@3ff60000"
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_UNQUOTED counter@3ff60000
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_TOKEN counter_3ff60000
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_UPPER_TOKEN COUNTER_3FF60000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff60000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60000_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_NODELABEL(fn) fn(timer2)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer2, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60000_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60000_HASH VQ_RbaiDt1CV78UNwE80uUC8ee3xnqJY_6zxp92QI10

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60000_ORD 49
#define DT_N_S_soc_S_counter_3ff60000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_timer DT_N_S_soc_S_counter_3ff60000
#define DT_N_NODELABEL_timer2             DT_N_S_soc_S_counter_3ff60000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60000_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_VAL_ADDRESS 1073086464 /* 0x3ff60000 */
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff60000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff60000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60000_P_group 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index 0
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff60000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status "okay"
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg {1073086464 /* 0x3ff60000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_0 1073086464
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff60000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60024
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60024_PATH "/soc/counter@3ff60024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME "counter@3ff60024"
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_UNQUOTED counter@3ff60024
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_TOKEN counter_3ff60024
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_UPPER_TOKEN COUNTER_3FF60024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff60024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60024_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_NODELABEL(fn) fn(timer3)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer3, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60024_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60024_HASH lgjouzEyuUrDqoK40heIBJVFYghUxn8psSHx7f2a1dI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60024_ORD 50
#define DT_N_S_soc_S_counter_3ff60024_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60024_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60024_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60024_EXISTS 1
#define DT_N_INST_3_espressif_esp32_timer DT_N_S_soc_S_counter_3ff60024
#define DT_N_NODELABEL_timer3             DT_N_S_soc_S_counter_3ff60024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60024_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_VAL_ADDRESS 1073086500 /* 0x3ff60024 */
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff60024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff60024_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60024_P_group 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff60024_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status "okay"
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg {1073086500 /* 0x3ff60024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_0 1073086500
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff60024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dac@3ff48800
 *
 * Node identifier: DT_N_S_soc_S_dac_3ff48800
 *
 * Binding (compatible = espressif,esp32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/espressif,esp32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_3ff48800_PATH "/soc/dac@3ff48800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME "dac@3ff48800"
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_UNQUOTED dac@3ff48800
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_TOKEN dac_3ff48800
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_UPPER_TOKEN DAC_3FF48800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_3ff48800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_3ff48800_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dac_3ff48800_NODELABEL_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_NODELABEL(fn) fn(dac)
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_3ff48800_CHILD_NUM 0
#define DT_N_S_soc_S_dac_3ff48800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dac_3ff48800_HASH tOgyO7AHESwEclEXsMOeQ7rMtYukJhPDci4HxHDoCig

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_3ff48800_ORD 51
#define DT_N_S_soc_S_dac_3ff48800_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_3ff48800_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_3ff48800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_3ff48800_EXISTS 1
#define DT_N_INST_0_espressif_esp32_dac DT_N_S_soc_S_dac_3ff48800
#define DT_N_NODELABEL_dac              DT_N_S_soc_S_dac_3ff48800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_3ff48800_REG_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_VAL_ADDRESS 1072990208 /* 0x3ff48800 */
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_dac_3ff48800_RANGES_NUM 0
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_3ff48800_IRQ_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_IRQ_LEVEL 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MATCHES_espressif_esp32_dac 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MODEL_IDX_0 "esp32-dac"
#define DT_N_S_soc_S_dac_3ff48800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_3ff48800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dac_3ff48800_P_status "disabled"
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, status, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, status, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_status_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible {"espressif,esp32-dac"}
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0 "espressif,esp32-dac"
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-dac
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_dac
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_DAC
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg {1072990208 /* 0x3ff48800 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_0 1072990208
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_1 256
#define DT_N_S_soc_S_dac_3ff48800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_wakeup_source 0
#define DT_N_S_soc_S_dac_3ff48800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache0@3f400000
 *
 * Node identifier: DT_N_S_soc_S_dcache0_3f400000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache0_3f400000_PATH "/soc/dcache0@3f400000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME "dcache0@3f400000"
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_UNQUOTED dcache0@3f400000
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_TOKEN dcache0_3f400000
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_UPPER_TOKEN DCACHE0_3F400000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dcache0_3f400000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache0_3f400000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_NODELABEL(fn) fn(dcache0)
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dcache0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dcache0_3f400000_HASH KiEHrO7y45r4Acj3iUPaq1CAxx0m_Eu1YgwqdoGMj2Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache0_3f400000_ORD 52
#define DT_N_S_soc_S_dcache0_3f400000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache0_3f400000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache0_3f400000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache0_3f400000_EXISTS 1
#define DT_N_INST_3_zephyr_memory_region DT_N_S_soc_S_dcache0_3f400000
#define DT_N_INST_3_mmio_sram            DT_N_S_soc_S_dcache0_3f400000
#define DT_N_NODELABEL_dcache0           DT_N_S_soc_S_dcache0_3f400000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache0_3f400000_REG_NUM 1
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_VAL_ADDRESS 1061158912 /* 0x3f400000 */
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_dcache0_3f400000_RANGES_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_IRQ_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_dcache0_3f400000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache0_3f400000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region "DCACHE0"
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_UNQUOTED DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_TOKEN DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_UPPER_TOKEN DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_IDX_0 "DCACHE0"
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0) \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_LEN 2
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg {1061158912 /* 0x3f400000 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_0 1061158912
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_wakeup_source 0
#define DT_N_S_soc_S_dcache0_3f400000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff67000
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff67000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff67000_PATH "/soc/i2c@3ff67000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME "i2c@3ff67000"
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_UNQUOTED i2c@3ff67000
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_TOKEN i2c_3ff67000
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_UPPER_TOKEN I2C_3FF67000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff67000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff67000_NODELABEL_NUM 3
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_NODELABEL(fn) fn(i2c1) fn(grove_i2c) fn(m5stack_mbus_i2c1)
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__) fn(grove_i2c, __VA_ARGS__) fn(m5stack_mbus_i2c1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff67000_HASH __TKSOUxQ3ngZWNVMdpENS7QBX6j6z7mn_oMf98XqvU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff67000_ORD 53
#define DT_N_S_soc_S_i2c_3ff67000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff67000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	17, /* /soc/gpio/gpio@3ff44800 */ \
	40, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff67000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff67000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_i2c  DT_N_S_soc_S_i2c_3ff67000
#define DT_N_NODELABEL_i2c1              DT_N_S_soc_S_i2c_3ff67000
#define DT_N_NODELABEL_grove_i2c         DT_N_S_soc_S_i2c_3ff67000
#define DT_N_NODELABEL_m5stack_mbus_i2c1 DT_N_S_soc_S_i2c_3ff67000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff67000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_ADDRESS 1073115136 /* 0x3ff67000 */
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff67000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff67000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff67000_P_reg {1073115136 /* 0x3ff67000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_0 1073115136
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44800
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_VAL_pin 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44800
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_VAL_pin 0
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_3ff67000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_3ff67000_P_rx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_3ff67000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sq_size 4
#define DT_N_S_soc_S_i2c_3ff67000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_cq_size 4
#define DT_N_S_soc_S_i2c_3ff67000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status "disabled"
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset 5
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff67000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/icache0@400d0000
 *
 * Node identifier: DT_N_S_soc_S_icache0_400d0000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_icache0_400d0000_PATH "/soc/icache0@400d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME "icache0@400d0000"
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_UNQUOTED icache0@400d0000
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_TOKEN icache0_400d0000
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_UPPER_TOKEN ICACHE0_400D0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_icache0_400d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_icache0_400d0000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_icache0_400d0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_NODELABEL(fn) fn(icache0)
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(icache0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_icache0_400d0000_CHILD_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_icache0_400d0000_HASH KbgZ02XllewOGn8Am2YD0zZE7vmNQk3qtg5Hb8p_c2o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_icache0_400d0000_ORD 54
#define DT_N_S_soc_S_icache0_400d0000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_icache0_400d0000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_icache0_400d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_icache0_400d0000_EXISTS 1
#define DT_N_INST_5_zephyr_memory_region DT_N_S_soc_S_icache0_400d0000
#define DT_N_INST_5_mmio_sram            DT_N_S_soc_S_icache0_400d0000
#define DT_N_NODELABEL_icache0           DT_N_S_soc_S_icache0_400d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_icache0_400d0000_REG_NUM 1
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_VAL_ADDRESS 1074593792 /* 0x400d0000 */
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_VAL_SIZE 11730944 /* 0xb30000 */
#define DT_N_S_soc_S_icache0_400d0000_RANGES_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_icache0_400d0000_IRQ_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_icache0_400d0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_icache0_400d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region "ICACHE0"
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_UNQUOTED ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_TOKEN ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_UPPER_TOKEN ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_IDX_0 "ICACHE0"
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0) \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_LEN 2
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg {1074593792 /* 0x400d0000 */, 11730944 /* 0xb30000 */}
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_0 1074593792
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_1 11730944
#define DT_N_S_soc_S_icache0_400d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_wakeup_source 0
#define DT_N_S_soc_S_icache0_400d0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ipi@3f4c0058
 *
 * Node identifier: DT_N_S_soc_S_ipi_3f4c0058
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipi_3f4c0058_PATH "/soc/ipi@3f4c0058"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME "ipi@3f4c0058"
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_UNQUOTED ipi@3f4c0058
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_TOKEN ipi_3f4c0058
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_UPPER_TOKEN IPI_3F4C0058

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipi_3f4c0058_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipi_3f4c0058_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_NODELABEL(fn) fn(ipi0)
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipi0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_NUM 0
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipi_3f4c0058_HASH Updud6Bn_I5smcFMtNZhVMRMvG3YjLb7kUgv7M_zWpE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipi_3f4c0058_ORD 55
#define DT_N_S_soc_S_ipi_3f4c0058_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipi_3f4c0058_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipi_3f4c0058_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipi_3f4c0058_EXISTS 1
#define DT_N_INST_0_espressif_crosscore_interrupt DT_N_S_soc_S_ipi_3f4c0058
#define DT_N_NODELABEL_ipi0                       DT_N_S_soc_S_ipi_3f4c0058

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipi_3f4c0058_REG_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_VAL_ADDRESS 1061945432 /* 0x3f4c0058 */
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_ipi_3f4c0058_RANGES_NUM 0
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MATCHES_espressif_crosscore_interrupt 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MODEL_IDX_0 "crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c0058_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipi_3f4c0058_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible {"espressif,crosscore-interrupt"}
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0 "espressif,crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_UNQUOTED espressif,crosscore-interrupt
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_TOKEN espressif_crosscore_interrupt
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_CROSSCORE_INTERRUPT
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_LEN 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg {1061945432 /* 0x3f4c0058 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_0 1061945432
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_1 4
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/ipi@3f4c005c
 *
 * Node identifier: DT_N_S_soc_S_ipi_3f4c005c
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipi_3f4c005c_PATH "/soc/ipi@3f4c005c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME "ipi@3f4c005c"
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_UNQUOTED ipi@3f4c005c
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_TOKEN ipi_3f4c005c
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_UPPER_TOKEN IPI_3F4C005C

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipi_3f4c005c_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipi_3f4c005c_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_NODELABEL(fn) fn(ipi1)
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipi1, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_NUM 0
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipi_3f4c005c_HASH 1IdHnAAC51281r6Nxt3Ml4IfemUe60n6A9GFEKGlM3A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipi_3f4c005c_ORD 56
#define DT_N_S_soc_S_ipi_3f4c005c_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipi_3f4c005c_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipi_3f4c005c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipi_3f4c005c_EXISTS 1
#define DT_N_INST_1_espressif_crosscore_interrupt DT_N_S_soc_S_ipi_3f4c005c
#define DT_N_NODELABEL_ipi1                       DT_N_S_soc_S_ipi_3f4c005c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipi_3f4c005c_REG_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_VAL_ADDRESS 1061945436 /* 0x3f4c005c */
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_ipi_3f4c005c_RANGES_NUM 0
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MATCHES_espressif_crosscore_interrupt 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MODEL_IDX_0 "crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c005c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipi_3f4c005c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible {"espressif,crosscore-interrupt"}
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0 "espressif,crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_UNQUOTED espressif,crosscore-interrupt
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_TOKEN espressif_crosscore_interrupt
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_CROSSCORE_INTERRUPT
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_LEN 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg {1061945436 /* 0x3f4c005c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_0 1061945436
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_1 4
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe5230
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe5230
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe5230_PATH "/soc/memory@3ffe5230"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME "memory@3ffe5230"
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_UNQUOTED memory@3ffe5230
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_TOKEN memory_3ffe5230
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_UPPER_TOKEN MEMORY_3FFE5230

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe5230_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe5230_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_NODELABEL(fn) fn(ipmmem0)
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipmmem0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe5230_HASH S_C7VBw_RT1OEZlAefTCJmPkq6pGRwwdA41wjJC_3oQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe5230_ORD 57
#define DT_N_S_soc_S_memory_3ffe5230_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe5230_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe5230_SUPPORTS_ORDS \
	58, /* /soc/ipm@3ffe9630 */ \
	60, /* /soc/mbox@3ffe9638 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe5230_EXISTS 1
#define DT_N_INST_6_mmio_sram  DT_N_S_soc_S_memory_3ffe5230
#define DT_N_NODELABEL_ipmmem0 DT_N_S_soc_S_memory_3ffe5230

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe5230_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_VAL_ADDRESS 1073631792 /* 0x3ffe5230 */
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_3ffe5230_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe5230_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe5230_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe5230_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe5230_P_reg {1073631792 /* 0x3ffe5230 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_0 1073631792
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe5230_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ipm@3ffe9630
 *
 * Node identifier: DT_N_S_soc_S_ipm_3ffe9630
 *
 * Binding (compatible = espressif,esp32-ipm):
 *   $ZEPHYR_BASE/dts/bindings/ipm/espressif,esp32-ipm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipm_3ffe9630_PATH "/soc/ipm@3ffe9630"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME "ipm@3ffe9630"
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_UNQUOTED ipm@3ffe9630
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_TOKEN ipm_3ffe9630
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_UPPER_TOKEN IPM_3FFE9630

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipm_3ffe9630_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipm_3ffe9630_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_NODELABEL(fn) fn(ipm0)
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipm0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_NUM 0
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipm_3ffe9630_HASH 2WNsp7ONtsCK_mpB1IjzgX64m51c7s3XFQj6rAWKMCY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipm_3ffe9630_ORD 58
#define DT_N_S_soc_S_ipm_3ffe9630_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipm_3ffe9630_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	57, /* /soc/memory@3ffe5230 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipm_3ffe9630_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipm_3ffe9630_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ipm DT_N_S_soc_S_ipm_3ffe9630
#define DT_N_NODELABEL_ipm0             DT_N_S_soc_S_ipm_3ffe9630

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipm_3ffe9630_REG_NUM 1
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_VAL_ADDRESS 1073649200 /* 0x3ffe9630 */
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_ipm_3ffe9630_RANGES_NUM 0
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_NUM 2
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MATCHES_espressif_esp32_ipm 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MODEL_IDX_0 "esp32-ipm"
#define DT_N_S_soc_S_ipm_3ffe9630_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipm_3ffe9630_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg {1073649200 /* 0x3ffe9630 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_0 1073649200
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_1 8
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_size 1024
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_size_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_3 25
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status "disabled"
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible {"espressif,esp32-ipm"}
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0 "espressif,esp32-ipm"
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ipm
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ipm
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_IPM
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_wakeup_source 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ledc@3ff59000
 *
 * Node identifier: DT_N_S_soc_S_ledc_3ff59000
 *
 * Binding (compatible = espressif,esp32-ledc):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-ledc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_3ff59000_PATH "/soc/ledc@3ff59000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME "ledc@3ff59000"
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_UNQUOTED ledc@3ff59000
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_TOKEN ledc_3ff59000
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_UPPER_TOKEN LEDC_3FF59000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ledc_3ff59000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_3ff59000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_NODELABEL(fn) fn(ledc0)
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledc0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ledc_3ff59000_HASH _sQMT8zvfqrjZvMqOu4kifo_69KcjgqqRgrz1HS56so

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_3ff59000_ORD 59
#define DT_N_S_soc_S_ledc_3ff59000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_3ff59000_REQUIRES_ORDS \
	2, /* /soc */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_3ff59000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_3ff59000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ledc DT_N_S_soc_S_ledc_3ff59000
#define DT_N_NODELABEL_ledc0             DT_N_S_soc_S_ledc_3ff59000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_3ff59000_REG_NUM 1
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_VAL_ADDRESS 1073057792 /* 0x3ff59000 */
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_ledc_3ff59000_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MATCHES_espressif_esp32_ledc 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MODEL_IDX_0 "esp32-ledc"
#define DT_N_S_soc_S_ledc_3ff59000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_3ff59000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_3ff59000_P_status "disabled"
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible {"espressif,esp32-ledc"}
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0 "espressif,esp32-ledc"
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ledc
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ledc
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_LEDC
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg {1073057792 /* 0x3ff59000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_0 1073057792
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_wakeup_source 0
#define DT_N_S_soc_S_ledc_3ff59000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mbox@3ffe9638
 *
 * Node identifier: DT_N_S_soc_S_mbox_3ffe9638
 *
 * Binding (compatible = espressif,mbox-esp32):
 *   $ZEPHYR_BASE/dts/bindings/mbox/espressif,mbox-esp32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mbox_3ffe9638_PATH "/soc/mbox@3ffe9638"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME "mbox@3ffe9638"
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_UNQUOTED mbox@3ffe9638
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_TOKEN mbox_3ffe9638
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_UPPER_TOKEN MBOX_3FFE9638

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mbox_3ffe9638_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mbox_3ffe9638_NODELABEL_NUM 1
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_NODELABEL(fn) fn(mbox0)
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_NODELABEL_VARGS(fn, ...) fn(mbox0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_NUM 0
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mbox_3ffe9638_HASH OHFNnCn0k8KUyPKRvimkiO7IHIye2_Y5bZ_cK2WgNTE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mbox_3ffe9638_ORD 60
#define DT_N_S_soc_S_mbox_3ffe9638_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mbox_3ffe9638_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	57, /* /soc/memory@3ffe5230 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mbox_3ffe9638_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mbox_3ffe9638_EXISTS 1
#define DT_N_INST_0_espressif_mbox_esp32 DT_N_S_soc_S_mbox_3ffe9638
#define DT_N_NODELABEL_mbox0             DT_N_S_soc_S_mbox_3ffe9638

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mbox_3ffe9638_REG_NUM 1
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_VAL_ADDRESS 1073649208 /* 0x3ffe9638 */
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_mbox_3ffe9638_RANGES_NUM 0
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_NUM 2
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_LEVEL 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MATCHES_espressif_mbox_esp32 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MODEL_IDX_0 "mbox-esp32"
#define DT_N_S_soc_S_mbox_3ffe9638_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mbox_3ffe9638_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg {1073649208 /* 0x3ffe9638 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_0 1073649208
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_1 8
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_size 1024
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_size_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_3 25
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status "disabled"
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible {"espressif,mbox-esp32"}
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0 "espressif,mbox-esp32"
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_UNQUOTED espressif,mbox-esp32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_TOKEN espressif_mbox_esp32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_MBOX_ESP32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_wakeup_source 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@3ff5e000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_3ff5e000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PATH "/soc/mcpwm@3ff5e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME "mcpwm@3ff5e000"
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_UNQUOTED mcpwm@3ff5e000
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_TOKEN mcpwm_3ff5e000
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_UPPER_TOKEN MCPWM_3FF5E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_NODELABEL(fn) fn(mcpwm0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_HASH fvjkluJ0H_8C338CMCPviUNWzf2gvA3JnTFGOsKDdLQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_ORD 61
#define DT_N_S_soc_S_mcpwm_3ff5e000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_3ff5e000
#define DT_N_NODELABEL_mcpwm0             DT_N_S_soc_S_mcpwm_3ff5e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_VAL_ADDRESS 1073078272 /* 0x3ff5e000 */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_3ff5e000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff5e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg {1073078272 /* 0x3ff5e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_0 1073078272
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_VAL_offset 10
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@3ff6c000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_3ff6c000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PATH "/soc/mcpwm@3ff6c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME "mcpwm@3ff6c000"
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_UNQUOTED mcpwm@3ff6c000
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_TOKEN mcpwm_3ff6c000
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_UPPER_TOKEN MCPWM_3FF6C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_NODELABEL(fn) fn(mcpwm1)
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm1, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_HASH jDncI2_KKgjFidiwT1hafPAlfYYng9h1WJdFgiqPDZI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_ORD 62
#define DT_N_S_soc_S_mcpwm_3ff6c000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_3ff6c000
#define DT_N_NODELABEL_mcpwm1             DT_N_S_soc_S_mcpwm_3ff6c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_VAL_ADDRESS 1073135616 /* 0x3ff6c000 */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_3ff6c000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff6c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg {1073135616 /* 0x3ff6c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_0 1073135616
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts {40 /* 0x28 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_VAL_offset 11
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffae000
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffae000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffae000_PATH "/soc/memory@3ffae000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME "memory@3ffae000"
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_UNQUOTED memory@3ffae000
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_TOKEN memory_3ffae000
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_UPPER_TOKEN MEMORY_3FFAE000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffae000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffae000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffae000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_NODELABEL(fn) fn(sram2)
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram2, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffae000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffae000_HASH V4G0BGzn_vjHulfdqM_oT7nNNpSXbUwAIRqFDJ51K_M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffae000_ORD 63
#define DT_N_S_soc_S_memory_3ffae000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffae000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffae000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffae000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_soc_S_memory_3ffae000
#define DT_N_INST_2_mmio_sram            DT_N_S_soc_S_memory_3ffae000
#define DT_N_NODELABEL_sram2             DT_N_S_soc_S_memory_3ffae000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffae000_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_VAL_ADDRESS 1073405952 /* 0x3ffae000 */
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_VAL_SIZE 204800 /* 0x32000 */
#define DT_N_S_soc_S_memory_3ffae000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffae000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffae000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffae000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region "SRAM2"
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_UNQUOTED SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_TOKEN SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_IDX_0 "SRAM2"
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg {1073405952 /* 0x3ffae000 */, 204800 /* 0x32000 */}
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_0 1073405952
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_1 204800
#define DT_N_S_soc_S_memory_3ffae000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffae000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe0000
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe0000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe0000_PATH "/soc/memory@3ffe0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME "memory@3ffe0000"
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_UNQUOTED memory@3ffe0000
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_TOKEN memory_3ffe0000
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_UPPER_TOKEN MEMORY_3FFE0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe0000_HASH OIgUjRVrI0NhaM7yCr_oMsCHIRwmJg7_RBUoQqZ9ef4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe0000_ORD 64
#define DT_N_S_soc_S_memory_3ffe0000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe0000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe0000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_soc_S_memory_3ffe0000
#define DT_N_INST_1_mmio_sram            DT_N_S_soc_S_memory_3ffe0000
#define DT_N_NODELABEL_sram1             DT_N_S_soc_S_memory_3ffe0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe0000_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_VAL_ADDRESS 1073610752 /* 0x3ffe0000 */
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_memory_3ffe0000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_UNQUOTED SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_IDX_0 "SRAM1"
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg {1073610752 /* 0x3ffe0000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_0 1073610752
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe5630
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe5630
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe5630_PATH "/soc/memory@3ffe5630"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME "memory@3ffe5630"
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_UNQUOTED memory@3ffe5630
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_TOKEN memory_3ffe5630
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_UPPER_TOKEN MEMORY_3FFE5630

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe5630_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe5630_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_NODELABEL(fn) fn(shm0)
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_NODELABEL_VARGS(fn, ...) fn(shm0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe5630_HASH TUZ1Vqduw_Qc97R5KaP_TYrGCNHRtbp46dNPmk2pJsA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe5630_ORD 65
#define DT_N_S_soc_S_memory_3ffe5630_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe5630_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe5630_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe5630_EXISTS 1
#define DT_N_INST_7_mmio_sram DT_N_S_soc_S_memory_3ffe5630
#define DT_N_NODELABEL_shm0   DT_N_S_soc_S_memory_3ffe5630

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe5630_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_VAL_ADDRESS 1073632816 /* 0x3ffe5630 */
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_3ffe5630_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe5630_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe5630_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe5630_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe5630_P_reg {1073632816 /* 0x3ffe5630 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_0 1073632816
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe5630_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@40070000
 *
 * Node identifier: DT_N_S_soc_S_memory_40070000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40070000_PATH "/soc/memory@40070000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40070000_FULL_NAME "memory@40070000"
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_UNQUOTED memory@40070000
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_TOKEN memory_40070000
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_UPPER_TOKEN MEMORY_40070000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40070000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40070000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_40070000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_40070000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_40070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_40070000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_40070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_40070000_HASH 4Sc_NpCjOPZUFHIWedeDH_nq8o0deyZgzz8q6jRHZKM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40070000_ORD 66
#define DT_N_S_soc_S_memory_40070000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40070000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40070000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40070000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_memory_40070000
#define DT_N_INST_0_mmio_sram            DT_N_S_soc_S_memory_40070000
#define DT_N_NODELABEL_sram0             DT_N_S_soc_S_memory_40070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40070000_REG_NUM 1
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_memory_40070000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40070000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40070000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40070000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_40070000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_40070000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_40070000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_40070000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40070000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region "SRAM0"
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_UNQUOTED SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_TOKEN SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_IDX_0 "SRAM0"
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40070000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_40070000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg {1074200576 /* 0x40070000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_0 1074200576
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_memory_40070000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40070000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pcnt@3ff57000
 *
 * Node identifier: DT_N_S_soc_S_pcnt_3ff57000
 *
 * Binding (compatible = espressif,esp32-pcnt):
 *   $ZEPHYR_BASE/dts/bindings/sensor/espressif,esp32-pcnt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcnt_3ff57000_PATH "/soc/pcnt@3ff57000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME "pcnt@3ff57000"
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_UNQUOTED pcnt@3ff57000
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_TOKEN pcnt_3ff57000
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_UPPER_TOKEN PCNT_3FF57000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pcnt_3ff57000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcnt_3ff57000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_NODELABEL(fn) fn(pcnt)
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcnt, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_NUM 0
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pcnt_3ff57000_HASH jIeI5MdLbR8MokLEoBEfN97mBuj00oNECPqiw5qG24Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcnt_3ff57000_ORD 67
#define DT_N_S_soc_S_pcnt_3ff57000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcnt_3ff57000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcnt_3ff57000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcnt_3ff57000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pcnt DT_N_S_soc_S_pcnt_3ff57000
#define DT_N_NODELABEL_pcnt              DT_N_S_soc_S_pcnt_3ff57000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcnt_3ff57000_REG_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_VAL_ADDRESS 1073049600 /* 0x3ff57000 */
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pcnt_3ff57000_RANGES_NUM 0
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MATCHES_espressif_esp32_pcnt 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MODEL_IDX_0 "esp32-pcnt"
#define DT_N_S_soc_S_pcnt_3ff57000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcnt_3ff57000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcnt_3ff57000_P_status "disabled"
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible {"espressif,esp32-pcnt"}
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0 "espressif,esp32-pcnt"
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pcnt
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pcnt
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PCNT
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg {1073049600 /* 0x3ff57000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_0 1073049600
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts {48 /* 0x30 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_0 48
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_VAL_offset 15
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_wakeup_source 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc_timer@3ff48004
 *
 * Node identifier: DT_N_S_soc_S_rtc_timer_3ff48004
 *
 * Binding (compatible = espressif,esp32-rtc-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-rtc-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PATH "/soc/rtc_timer@3ff48004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME "rtc_timer@3ff48004"
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_UNQUOTED rtc_timer@3ff48004
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_TOKEN rtc_timer_3ff48004
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_UPPER_TOKEN RTC_TIMER_3FF48004

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_NODELABEL(fn) fn(rtc_timer)
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc_timer, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_HASH PjUa9LAQXZnyYkisd79RkaffiKwC_xq2fx4yEYDmR88

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_ORD 68
#define DT_N_S_soc_S_rtc_timer_3ff48004_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc_timer DT_N_S_soc_S_rtc_timer_3ff48004
#define DT_N_NODELABEL_rtc_timer              DT_N_S_soc_S_rtc_timer_3ff48004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_VAL_ADDRESS 1072988164 /* 0x3ff48004 */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_VAL_SIZE 12 /* 0xc */
#define DT_N_S_soc_S_rtc_timer_3ff48004_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MATCHES_espressif_esp32_rtc_timer 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MODEL_IDX_0 "esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_3ff48004_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status "okay"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible {"espressif,esp32-rtc-timer"}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0 "espressif,esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-rtc-timer
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_rtc_timer
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_RTC_TIMER
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg {1072988164 /* 0x3ff48004 */, 12 /* 0xc */}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_0 1072988164
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_1 12
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_VAL_offset 34
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@3ff64000
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff64000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff64000_PATH "/soc/spi@3ff64000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME "spi@3ff64000"
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_UNQUOTED spi@3ff64000
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_TOKEN spi_3ff64000
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_UPPER_TOKEN SPI_3FF64000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_3ff64000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff64000_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff64000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff64000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_3ff64000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff64000_HASH 4iuEPEo0U9d_OuHWeK01B9ZjBKzmQBJdsltAmSo8hsQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff64000_ORD 69
#define DT_N_S_soc_S_spi_3ff64000_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff64000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff64000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff64000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_spi DT_N_S_soc_S_spi_3ff64000
#define DT_N_NODELABEL_spi2             DT_N_S_soc_S_spi_3ff64000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff64000_REG_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_VAL_ADDRESS 1073102848 /* 0x3ff64000 */
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_3ff64000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff64000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_3ff64000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff64000_P_reg {1073102848 /* 0x3ff64000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_0 1073102848
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_3ff64000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_half_duplex 0
#define DT_N_S_soc_S_spi_3ff64000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_3ff64000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_sio 0
#define DT_N_S_soc_S_spi_3ff64000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_enabled 0
#define DT_N_S_soc_S_spi_3ff64000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_clk 19
#define DT_N_S_soc_S_spi_3ff64000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_host 0
#define DT_N_S_soc_S_spi_3ff64000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_3ff64000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_positive_cs 0
#define DT_N_S_soc_S_spi_3ff64000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_use_iomux 0
#define DT_N_S_soc_S_spi_3ff64000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_3ff64000_P_line_idle_low_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status "disabled"
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, status, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, status, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_VAL_offset 17
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff64000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/touch@3ff48858
 *
 * Node identifier: DT_N_S_soc_S_touch_3ff48858
 *
 * Binding (compatible = espressif,esp32-touch):
 *   $ZEPHYR_BASE/dts/bindings/input/espressif,esp32-touch-sensor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_touch_3ff48858_PATH "/soc/touch@3ff48858"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME "touch@3ff48858"
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_UNQUOTED touch@3ff48858
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_TOKEN touch_3ff48858
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_UPPER_TOKEN TOUCH_3FF48858

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_touch_3ff48858_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_touch_3ff48858_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_touch_3ff48858_NODELABEL_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_NODELABEL(fn) fn(touch)
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_NODELABEL_VARGS(fn, ...) fn(touch, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_touch_3ff48858_CHILD_NUM 0
#define DT_N_S_soc_S_touch_3ff48858_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_touch_3ff48858_HASH ruHcWOy_TvYbht_nLsoXQkAaQmY0PsXzO1usPfvkl7k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_touch_3ff48858_ORD 70
#define DT_N_S_soc_S_touch_3ff48858_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_touch_3ff48858_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_touch_3ff48858_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_touch_3ff48858_EXISTS 1
#define DT_N_INST_0_espressif_esp32_touch DT_N_S_soc_S_touch_3ff48858
#define DT_N_NODELABEL_touch              DT_N_S_soc_S_touch_3ff48858

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_touch_3ff48858_REG_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_VAL_ADDRESS 1072990296 /* 0x3ff48858 */
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_VAL_SIZE 56 /* 0x38 */
#define DT_N_S_soc_S_touch_3ff48858_RANGES_NUM 0
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_touch_3ff48858_IRQ_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_IRQ_LEVEL 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MATCHES_espressif_esp32_touch 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MODEL_IDX_0 "esp32-touch"
#define DT_N_S_soc_S_touch_3ff48858_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_touch_3ff48858_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_touch_3ff48858_P_debounce_interval_ms 30
#define DT_N_S_soc_S_touch_3ff48858_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt 2700000
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_ENUM_VAL_2700000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt 500000
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_ENUM_VAL_500000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt 1000000
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_ENUM_VAL_1000000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_mode 2
#define DT_N_S_soc_S_touch_3ff48858_P_filter_mode_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_debounce_cnt 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_debounce_cnt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_noise_thr 0
#define DT_N_S_soc_S_touch_3ff48858_P_filter_noise_thr_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_jitter_step 4
#define DT_N_S_soc_S_touch_3ff48858_P_filter_jitter_step_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_smooth_level 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_smooth_level_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status "disabled"
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, status, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, status, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_status_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible {"espressif,esp32-touch"}
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0 "espressif,esp32-touch"
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-touch
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_touch
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TOUCH
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg {1072990296 /* 0x3ff48858 */, 56 /* 0x38 */}
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_0 1072990296
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_1 56
#define DT_N_S_soc_S_touch_3ff48858_P_reg_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_wakeup_source 0
#define DT_N_S_soc_S_touch_3ff48858_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/trng@3ff75144
 *
 * Node identifier: DT_N_S_soc_S_trng_3ff75144
 *
 * Binding (compatible = espressif,esp32-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/espressif,esp32-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_trng_3ff75144_PATH "/soc/trng@3ff75144"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME "trng@3ff75144"
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_UNQUOTED trng@3ff75144
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_TOKEN trng_3ff75144
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_UPPER_TOKEN TRNG_3FF75144

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_trng_3ff75144_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_trng_3ff75144_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_trng_3ff75144_NODELABEL_NUM 1
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_NODELABEL(fn) fn(trng0)
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_trng_3ff75144_CHILD_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_trng_3ff75144_HASH OAUDnbaGdXu7WeVVuy8HpaaRBZBMdZTgzkJtxoZiGGc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_trng_3ff75144_ORD 71
#define DT_N_S_soc_S_trng_3ff75144_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_trng_3ff75144_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_trng_3ff75144_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_trng_3ff75144_EXISTS 1
#define DT_N_INST_0_espressif_esp32_trng DT_N_S_soc_S_trng_3ff75144
#define DT_N_NODELABEL_trng0             DT_N_S_soc_S_trng_3ff75144

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_trng_3ff75144_REG_NUM 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_ADDRESS 1073172804 /* 0x3ff75144 */
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_trng_3ff75144_RANGES_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_trng_3ff75144_IRQ_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_IRQ_LEVEL 0
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MATCHES_espressif_esp32_trng 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MODEL_IDX_0 "esp32-trng"
#define DT_N_S_soc_S_trng_3ff75144_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_trng_3ff75144_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_trng_3ff75144_P_reg {1073172804 /* 0x3ff75144 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_0 1073172804
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_1 4
#define DT_N_S_soc_S_trng_3ff75144_P_reg_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status "okay"
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_3ff75144, status, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, status, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_3ff75144, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_status_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible {"espressif,esp32-trng"}
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0 "espressif,esp32-trng"
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-trng
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_trng
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TRNG
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_wakeup_source 0
#define DT_N_S_soc_S_trng_3ff75144_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_rx_gpio3
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_rx_gpio3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_PATH "/pin-controller/uart0_rx_gpio3"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FULL_NAME "uart0_rx_gpio3"
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FULL_NAME_UNQUOTED uart0_rx_gpio3
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FULL_NAME_TOKEN uart0_rx_gpio3
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FULL_NAME_UPPER_TOKEN UART0_RX_GPIO3

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_NODELABEL(fn) fn(uart0_rx_gpio3)
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_rx_gpio3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_HASH tlbndSzxtBtJnjq8gVBn_k1hXvf1zk7k5uqS1Sft_YA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_ORD 72
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_SUPPORTS_ORDS \
	74, /* /soc/uart@3ff40000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_EXISTS 1
#define DT_N_NODELABEL_uart0_rx_gpio3 DT_N_S_pin_controller_S_uart0_rx_gpio3

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_rx_gpio3_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_tx_gpio1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_tx_gpio1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_PATH "/pin-controller/uart0_tx_gpio1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FULL_NAME "uart0_tx_gpio1"
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FULL_NAME_UNQUOTED uart0_tx_gpio1
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FULL_NAME_TOKEN uart0_tx_gpio1
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FULL_NAME_UPPER_TOKEN UART0_TX_GPIO1

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_NODELABEL(fn) fn(uart0_tx_gpio1)
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_tx_gpio1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_HASH rJOD8PiCGU8IgscOthqIMk0obEW1uHepehnnICza0Nk

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_ORD 73
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_SUPPORTS_ORDS \
	74, /* /soc/uart@3ff40000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_EXISTS 1
#define DT_N_NODELABEL_uart0_tx_gpio1 DT_N_S_pin_controller_S_uart0_tx_gpio1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_tx_gpio1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@3ff40000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff40000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff40000_PATH "/soc/uart@3ff40000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME "uart@3ff40000"
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_UNQUOTED uart@3ff40000
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_TOKEN uart_3ff40000
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_UPPER_TOKEN UART_3FF40000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff40000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff40000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff40000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff40000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff40000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff40000_HASH ZJ6nU7qWwJ_nE_jDJQ2xPEXnIZPOf39wQ05Dj2rCldo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff40000_ORD 74
#define DT_N_S_soc_S_uart_3ff40000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff40000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	72, /* /pin-controller/uart0_rx_gpio3 */ \
	73, /* /pin-controller/uart0_tx_gpio1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff40000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff40000_EXISTS 1
#define DT_N_ALIAS_uart_0                DT_N_S_soc_S_uart_3ff40000
#define DT_N_INST_0_espressif_esp32_uart DT_N_S_soc_S_uart_3ff40000
#define DT_N_NODELABEL_uart0             DT_N_S_soc_S_uart_3ff40000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff40000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_ADDRESS 1072955392 /* 0x3ff40000 */
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff40000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff40000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff40000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_tx_gpio1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_pin_controller_S_uart0_rx_gpio3

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff40000_P_reg {1072955392 /* 0x3ff40000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_0 1072955392
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff40000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_tx_gpio1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_tx_gpio1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_1 DT_N_S_pin_controller_S_uart0_rx_gpio3
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_1_PH DT_N_S_pin_controller_S_uart0_rx_gpio3
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff40000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status "okay"
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, status, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, status, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts {34 /* 0x22 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff40000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff40000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff40000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_rx_gpio33
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_rx_gpio33
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_PATH "/pin-controller/uart1_rx_gpio33"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FULL_NAME "uart1_rx_gpio33"
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FULL_NAME_UNQUOTED uart1_rx_gpio33
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FULL_NAME_TOKEN uart1_rx_gpio33
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FULL_NAME_UPPER_TOKEN UART1_RX_GPIO33

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_NODELABEL(fn) fn(uart1_rx_gpio33)
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_rx_gpio33, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_HASH fNsE_7Q9yjs_U6FGur0J5_cVddmyhppF_aqWy5ahWpg

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_ORD 75
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_SUPPORTS_ORDS \
	77, /* /soc/uart@3ff50000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_EXISTS 1
#define DT_N_NODELABEL_uart1_rx_gpio33 DT_N_S_pin_controller_S_uart1_rx_gpio33

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_rx_gpio33_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart1_tx_gpio32
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_tx_gpio32
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_PATH "/pin-controller/uart1_tx_gpio32"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FULL_NAME "uart1_tx_gpio32"
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FULL_NAME_UNQUOTED uart1_tx_gpio32
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FULL_NAME_TOKEN uart1_tx_gpio32
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FULL_NAME_UPPER_TOKEN UART1_TX_GPIO32

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_NODELABEL(fn) fn(uart1_tx_gpio32)
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_tx_gpio32, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_HASH cmkHqM2urlyyz7XeZZocP2IDmBI1Oxz_Lg481o8UGZE

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_ORD 76
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_REQUIRES_ORDS \
	3, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_SUPPORTS_ORDS \
	77, /* /soc/uart@3ff50000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_EXISTS 1
#define DT_N_NODELABEL_uart1_tx_gpio32 DT_N_S_pin_controller_S_uart1_tx_gpio32

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_tx_gpio32_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@3ff50000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff50000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff50000_PATH "/soc/uart@3ff50000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME "uart@3ff50000"
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_UNQUOTED uart@3ff50000
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_TOKEN uart_3ff50000
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_UPPER_TOKEN UART_3FF50000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff50000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff50000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff50000_NODELABEL_NUM 3
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_NODELABEL(fn) fn(uart1) fn(grove_uart) fn(m5stack_mbus_uart0)
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__) fn(grove_uart, __VA_ARGS__) fn(m5stack_mbus_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff50000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff50000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff50000_HASH epOivShIibzQG6Ymd3l23es4DCViHonf1S_OBpBu47o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff50000_ORD 77
#define DT_N_S_soc_S_uart_3ff50000_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff50000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */ \
	75, /* /pin-controller/uart1_rx_gpio33 */ \
	76, /* /pin-controller/uart1_tx_gpio32 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff50000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff50000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_uart  DT_N_S_soc_S_uart_3ff50000
#define DT_N_NODELABEL_uart1              DT_N_S_soc_S_uart_3ff50000
#define DT_N_NODELABEL_grove_uart         DT_N_S_soc_S_uart_3ff50000
#define DT_N_NODELABEL_m5stack_mbus_uart0 DT_N_S_soc_S_uart_3ff50000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff50000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_ADDRESS 1073020928 /* 0x3ff50000 */
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff50000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff50000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff50000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart1_rx_gpio33
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_pin_controller_S_uart1_tx_gpio32

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff50000_P_reg {1073020928 /* 0x3ff50000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_0 1073020928
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff50000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart1_rx_gpio33
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart1_rx_gpio33
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_1 DT_N_S_pin_controller_S_uart1_tx_gpio32
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_1_PH DT_N_S_pin_controller_S_uart1_tx_gpio32
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff50000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, status, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, status, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts {35 /* 0x23 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset 2
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff50000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff50000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff50000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff6e000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff6e000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff6e000_PATH "/soc/uart@3ff6e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME "uart@3ff6e000"
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_UNQUOTED uart@3ff6e000
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_TOKEN uart_3ff6e000
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_UPPER_TOKEN UART_3FF6E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff6e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff6e000_NODELABEL_NUM 2
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_NODELABEL(fn) fn(uart2) fn(m5stack_mbus_uart1)
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__) fn(m5stack_mbus_uart1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff6e000_HASH OWzwi7XoV5M7SAUUw9Em04WWn1fkk2CLgOBWB787GI8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff6e000_ORD 78
#define DT_N_S_soc_S_uart_3ff6e000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff6e000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff6e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff6e000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_uart  DT_N_S_soc_S_uart_3ff6e000
#define DT_N_NODELABEL_uart2              DT_N_S_soc_S_uart_3ff6e000
#define DT_N_NODELABEL_m5stack_mbus_uart1 DT_N_S_soc_S_uart_3ff6e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff6e000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_ADDRESS 1073143808 /* 0x3ff6e000 */
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff6e000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff6e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff6e000_P_reg {1073143808 /* 0x3ff6e000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_0 1073143808
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset 3
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff6e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff5f048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_3ff5f048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PATH "/soc/watchdog@3ff5f048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME "watchdog@3ff5f048"
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_UNQUOTED watchdog@3ff5f048
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_TOKEN watchdog_3ff5f048
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_UPPER_TOKEN WATCHDOG_3FF5F048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_3ff5f048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_3ff5f048_HASH _bhIWP64iGOnT456YYWt8rcx3K1ZTHMEiVe1w_wHW84

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_3ff5f048_ORD 79
#define DT_N_S_soc_S_watchdog_3ff5f048_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_3ff5f048_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_3ff5f048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff5f048_EXISTS 1
#define DT_N_ALIAS_watchdog0                 DT_N_S_soc_S_watchdog_3ff5f048
#define DT_N_INST_0_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff5f048
#define DT_N_NODELABEL_wdt0                  DT_N_S_soc_S_watchdog_3ff5f048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_ADDRESS 1073082440 /* 0x3ff5f048 */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff5f048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff5f048_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg {1073082440 /* 0x3ff5f048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_0 1073082440
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status "okay"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff60048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_3ff60048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_3ff60048_PATH "/soc/watchdog@3ff60048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME "watchdog@3ff60048"
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_UNQUOTED watchdog@3ff60048
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_TOKEN watchdog_3ff60048
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_UPPER_TOKEN WATCHDOG_3FF60048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff60048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_3ff60048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_NODELABEL(fn) fn(wdt1)
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_3ff60048_HASH 0sJM_LZMcazl4nE2iFAijdzgENbaE8gXeyB7VzP2Sew

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_3ff60048_ORD 80
#define DT_N_S_soc_S_watchdog_3ff60048_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_3ff60048_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_3ff60048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff60048_EXISTS 1
#define DT_N_INST_1_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff60048
#define DT_N_NODELABEL_wdt1                  DT_N_S_soc_S_watchdog_3ff60048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_ADDRESS 1073086536 /* 0x3ff60048 */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff60048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff60048_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_3ff60048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg {1073086536 /* 0x3ff60048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_0 1073086536
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status "disabled"
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache1@3f800000
 *
 * Node identifier: DT_N_S_soc_S_dcache1_3f800000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache1_3f800000_PATH "/soc/dcache1@3f800000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME "dcache1@3f800000"
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_UNQUOTED dcache1@3f800000
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_TOKEN dcache1_3f800000
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_UPPER_TOKEN DCACHE1_3F800000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dcache1_3f800000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache1_3f800000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_NODELABEL(fn) fn(dcache1)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dcache1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_dcache1_3f800000_HASH JhTLNqrEAlQlq6f7EuUcvmZgzWnRB5EzBjxqW_fbxg4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache1_3f800000_ORD 81
#define DT_N_S_soc_S_dcache1_3f800000_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache1_3f800000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache1_3f800000_SUPPORTS_ORDS \
	82, /* /soc/dcache1@3f800000/psram0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache1_3f800000_EXISTS 1
#define DT_N_INST_4_zephyr_memory_region DT_N_S_soc_S_dcache1_3f800000
#define DT_N_INST_4_mmio_sram            DT_N_S_soc_S_dcache1_3f800000
#define DT_N_NODELABEL_dcache1           DT_N_S_soc_S_dcache1_3f800000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache1_3f800000_REG_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_VAL_ADDRESS 1065353216 /* 0x3f800000 */
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_dcache1_3f800000_RANGES_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_IRQ_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_dcache1_3f800000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache1_3f800000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region "DCACHE1"
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_UNQUOTED DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_TOKEN DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_UPPER_TOKEN DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_IDX_0 "DCACHE1"
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0) \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_LEN 2
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg {1065353216 /* 0x3f800000 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_0 1065353216
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_wakeup_source 0
#define DT_N_S_soc_S_dcache1_3f800000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache1@3f800000/psram0
 *
 * Node identifier: DT_N_S_soc_S_dcache1_3f800000_S_psram0
 *
 * Binding (compatible = espressif,esp32-psram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/espressif,esp32-psram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PATH "/soc/dcache1@3f800000/psram0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME "psram0"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_UNQUOTED psram0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_TOKEN psram0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_UPPER_TOKEN PSRAM0

/* Node parent (/soc/dcache1@3f800000) identifier: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PARENT DT_N_S_soc_S_dcache1_3f800000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_NODELABEL(fn) fn(psram0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_NODELABEL_VARGS(fn, ...) fn(psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_HASH pztSckc2_osdn_h1_OJ6CjNfIcTPyovILH06kQ9X0vk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_ORD 82
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_REQUIRES_ORDS \
	81, /* /soc/dcache1@3f800000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_EXISTS 1
#define DT_N_INST_0_espressif_esp32_psram DT_N_S_soc_S_dcache1_3f800000_S_psram0
#define DT_N_NODELABEL_psram0             DT_N_S_soc_S_dcache1_3f800000_S_psram0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_REG_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_RANGES_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_IRQ_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MATCHES_espressif_esp32_psram 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MODEL_IDX_0 "esp32-psram"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_size 8388608
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_size_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible {"espressif,esp32-psram"}
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0 "espressif,esp32-psram"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-psram
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_psram
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PSRAM
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_LEN 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_wakeup_source 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000
 *
 * Binding (compatible = espressif,esp32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/espressif,esp32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PATH "/soc/flash-controller@3ff42000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME "flash-controller@3ff42000"
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_UNQUOTED flash-controller@3ff42000
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_TOKEN flash_controller_3ff42000
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_3FF42000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_HASH iyzHihwCxbcSj6ECn8XYdN5jwX3xB0p0Ck3Yvv_7ZEg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_ORD 83
#define DT_N_S_soc_S_flash_controller_3ff42000_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_SUPPORTS_ORDS \
	84, /* /soc/flash-controller@3ff42000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_flash_controller DT_N_S_soc_S_flash_controller_3ff42000
#define DT_N_NODELABEL_flash                         DT_N_S_soc_S_flash_controller_3ff42000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_VAL_ADDRESS 1072963584 /* 0x3ff42000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MATCHES_espressif_esp32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MODEL_IDX_0 "esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_3ff42000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg {1072963584 /* 0x3ff42000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_0 1072963584
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible {"espressif,esp32-flash-controller"}
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0 "espressif,esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-flash-controller
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_flash_controller
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PATH "/soc/flash-controller@3ff42000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/flash-controller@3ff42000) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_3ff42000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_HASH 43PxI_LHqetsBze8f2Vz_zV_tbGiZ7ZtM_VPLQYk8Ks

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_ORD 84
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REQUIRES_ORDS \
	83, /* /soc/flash-controller@3ff42000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_SUPPORTS_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_VAL_SIZE 16777216 /* 0x1000000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg {0 /* 0x0 */, 16777216 /* 0x1000000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_1 16777216
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PATH "/soc/flash-controller@3ff42000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@3ff42000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_NUM 10
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 10
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_HASH _wYi5G6Xi6rzY7cdPb2uS8SpJdLhv8Bct_lNZqr8o3g

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_ORD 85
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_REQUIRES_ORDS \
	84, /* /soc/flash-controller@3ff42000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	86, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000 */ \
	87, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000 */ \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000 */ \
	89, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000 */ \
	90, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000 */ \
	91, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000 */ \
	92, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000 */ \
	93, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000 */ \
	94, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000 */ \
	95, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@1000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME "partition@1000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_UNQUOTED partition@1000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_TOKEN partition_1000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_UPPER_TOKEN PARTITION_1000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_HASH 1whYnHcvDc_9MNNKRuISI2oJPSArV8rsf1sxGDMb4Ys

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_ORD 86
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_ADDRESS 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_SIZE 126976 /* 0x1f000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg {4096 /* 0x1000 */, 126976 /* 0x1f000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_0 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_1 126976
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME "partition@20000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UNQUOTED partition@20000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_TOKEN partition_20000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UPPER_TOKEN PARTITION_20000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_HASH d560DnIflhJHDvICT4TfIGL9mZYkmU7weUgulc3EQ1k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_ORD 87
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@170000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME "partition@170000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UNQUOTED partition@170000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_TOKEN partition_170000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UPPER_TOKEN PARTITION_170000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_HASH LmSmrKK7DF5nvPCBAkgVTT1Fu4td_o03KUH9_0kMjqM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_ORD 88
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_ADDRESS 1507328 /* 0x170000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg {1507328 /* 0x170000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0 1507328
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME "partition@2c0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_UNQUOTED partition@2c0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_TOKEN partition_2c0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_UPPER_TOKEN PARTITION_2C0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_NODELABEL(fn) fn(slot0_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_appcpu_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_HASH Pr03hKJ4c56tuxYAUI8JCj3EjzJxhK9GBbZOi2Gx5dA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_ORD 89
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_EXISTS 1
#define DT_N_NODELABEL_slot0_appcpu_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_VAL_ADDRESS 2883584 /* 0x2c0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_VAL_SIZE 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_UNQUOTED image-0-appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_TOKEN image_0_appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_UPPER_TOKEN IMAGE_0_APPCPU
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_IDX_0 "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg {2883584 /* 0x2c0000 */, 458752 /* 0x70000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_0 2883584
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_1 458752
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@330000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME "partition@330000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_UNQUOTED partition@330000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_TOKEN partition_330000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_UPPER_TOKEN PARTITION_330000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_NODELABEL(fn) fn(slot1_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_appcpu_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_HASH DL3440iMLui_kNHLUzTXL1_9VaDhDpagZ1qpBhyrBdM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_ORD 90
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_EXISTS 1
#define DT_N_NODELABEL_slot1_appcpu_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_VAL_ADDRESS 3342336 /* 0x330000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_VAL_SIZE 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_UNQUOTED image-1-appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_TOKEN image_1_appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_UPPER_TOKEN IMAGE_1_APPCPU
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_IDX_0 "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg {3342336 /* 0x330000 */, 458752 /* 0x70000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_0 3342336
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_1 458752
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME "partition@3a0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_UNQUOTED partition@3a0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_TOKEN partition_3a0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_UPPER_TOKEN PARTITION_3A0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_NODELABEL(fn) fn(slot0_lpcore_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_lpcore_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_HASH PC9l85GZQxrR4qDvgqKw5mmI1BACOCPwLm3oGk_T8e8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_ORD 91
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_EXISTS 1
#define DT_N_NODELABEL_slot0_lpcore_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_VAL_ADDRESS 3801088 /* 0x3a0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label "image-0-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_UNQUOTED image-0-lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_TOKEN image_0_lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_UPPER_TOKEN IMAGE_0_LPCORE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_IDX_0 "image-0-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg {3801088 /* 0x3a0000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_0 3801088
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME "partition@3a8000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_UNQUOTED partition@3a8000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_TOKEN partition_3a8000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_UPPER_TOKEN PARTITION_3A8000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_NODELABEL(fn) fn(slot1_lpcore_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_lpcore_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_HASH 7Wyv5aLJFbY9l_yXn_sDiee7pR8LGj1cNr9R0Gam1sA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_ORD 92
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_EXISTS 1
#define DT_N_NODELABEL_slot1_lpcore_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_VAL_ADDRESS 3833856 /* 0x3a8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PARTITION_ID 6

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label "image-1-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_UNQUOTED image-1-lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_TOKEN image_1_lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_UPPER_TOKEN IMAGE_1_LPCORE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_IDX_0 "image-1-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg {3833856 /* 0x3a8000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_0 3833856
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME "partition@3b0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_UNQUOTED partition@3b0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_TOKEN partition_3b0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_UPPER_TOKEN PARTITION_3B0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_HASH __eR35X0b4z0EjFZWhk4NYyh0KDm6WtBvuDe999_yss

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_ORD 93
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_VAL_ADDRESS 3866624 /* 0x3b0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PARTITION_ID 7

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg {3866624 /* 0x3b0000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_0 3866624
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME "partition@3e0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UNQUOTED partition@3e0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_TOKEN partition_3e0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UPPER_TOKEN PARTITION_3E0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL(fn) fn(scratch_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(scratch_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_HASH jv63NowcZC8s4ZmjMxQ0e6l9jcXsxfEr0mzBkyJusc4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_ORD 94
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_ADDRESS 4063232 /* 0x3e0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_SIZE 126976 /* 0x1f000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PARTITION_ID 8

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg {4063232 /* 0x3e0000 */, 126976 /* 0x1f000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0 4063232
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1 126976
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME "partition@3ff000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_UNQUOTED partition@3ff000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_TOKEN partition_3ff000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_UPPER_TOKEN PARTITION_3FF000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_NODELABEL(fn) fn(coredump_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_NODELABEL_VARGS(fn, ...) fn(coredump_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_HASH GDbW_q7PSd5HILK5KFSFL_WV60sBooxidGgoh5Yp5Xs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_ORD 95
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REQUIRES_ORDS \
	85, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_EXISTS 1
#define DT_N_NODELABEL_coredump_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_VAL_ADDRESS 4190208 /* 0x3ff000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PARTITION_ID 9

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label "coredump"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_UNQUOTED coredump
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_TOKEN coredump
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_UPPER_TOKEN COREDUMP
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_IDX_0 "coredump"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg {4190208 /* 0x3ff000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_0 4190208
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/pfc8563@51
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51
 *
 * Binding (compatible = nxp,pcf8563):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nxp,pcf8563.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_PATH "/soc/i2c@3ff53000/pfc8563@51"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FULL_NAME "pfc8563@51"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FULL_NAME_UNQUOTED pfc8563@51
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FULL_NAME_TOKEN pfc8563_51
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FULL_NAME_UPPER_TOKEN PFC8563_51

/* Node parent (/soc/i2c@3ff53000) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_PARENT DT_N_S_soc_S_i2c_3ff53000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_NODELABEL(fn) fn(pfc8563_rtc)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_NODELABEL_VARGS(fn, ...) fn(pfc8563_rtc, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_HASH alwI4E2TTaogiPT9Jdf7Z_u__WKeVNbaTaFhmSCrJs0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_ORD 96
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_REQUIRES_ORDS \
	9, /* /soc/i2c@3ff53000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_EXISTS 1
#define DT_N_ALIAS_rtc             DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51
#define DT_N_INST_0_nxp_pcf8563    DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51
#define DT_N_NODELABEL_pfc8563_rtc DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_REG_IDX_0_VAL_ADDRESS 81 /* 0x51 */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_COMPAT_MATCHES_nxp_pcf8563 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_COMPAT_MODEL_IDX_0 "pcf8563"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_alarms_count 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_alarms_count_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible {"nxp,pcf8563"}
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_IDX_0 "nxp,pcf8563"
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_IDX_0_STRING_UNQUOTED nxp,pcf8563
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_IDX_0_STRING_TOKEN nxp_pcf8563
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PCF8563
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_reg {81 /* 0x51 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_reg_IDX_0 81
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio0
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_PATH "/soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FULL_NAME "axp192_gpio0"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FULL_NAME_UNQUOTED axp192_gpio0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FULL_NAME_TOKEN axp192_gpio0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FULL_NAME_UPPER_TOKEN AXP192_GPIO0

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_gpio) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_NODELABEL(fn) fn(bus_pwr_en)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_NODELABEL_VARGS(fn, ...) fn(bus_pwr_en, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_HASH kKgcsHtqYL_sDOaQS_qPci_Ywom_5aQXXUzKQgasz_Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_ORD 97
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_REQUIRES_ORDS \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_EXISTS 1
#define DT_N_NODELABEL_bus_pwr_en DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_PINCTRL_NUM 0

/* GPIO hog properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_VAL_pin 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_GPIO_HOGS_IDX_0_VAL_flags_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpio_hog 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpio_hog_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_IDX_0 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_IDX_1 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 0) \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 1)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 1)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_LEN 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_input 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_input_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_output_low 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_output_high 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_output_high_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name "bus_pwr_en"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_STRING_UNQUOTED bus_pwr_en
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_STRING_TOKEN bus_pwr_en
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_STRING_UPPER_TOKEN BUS_PWR_EN
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_IDX_0 "bus_pwr_en"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, line_name, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, line_name, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, line_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, line_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0_P_line_name_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio1
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_PATH "/soc/i2c@3ff53000/axp192@34/axp192_gpio/axp192_gpio1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FULL_NAME "axp192_gpio1"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FULL_NAME_UNQUOTED axp192_gpio1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FULL_NAME_TOKEN axp192_gpio1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FULL_NAME_UPPER_TOKEN AXP192_GPIO1

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_gpio) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_NODELABEL(fn) fn(pwr_led)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwr_led, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_HASH XFae0cflJfcsIjcBSfgDI5LFvZ9ksbl9eQIgHzkrlMc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_ORD 98
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_REQUIRES_ORDS \
	11, /* /soc/i2c@3ff53000/axp192@34/axp192_gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_EXISTS 1
#define DT_N_ALIAS_pwr_led     DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1
#define DT_N_NODELABEL_pwr_led DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_PINCTRL_NUM 0

/* GPIO hog properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_PH DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_VAL_pin 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_VAL_flags 7
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_GPIO_HOGS_IDX_0_VAL_flags_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpio_hog 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpio_hog_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios {1 /* 0x1 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_IDX_0 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_IDX_1 7
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 0) \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 1)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 1)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_LEN 2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_input 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_input_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_output_low 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_output_high 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_output_high_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name "pwr-led"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_STRING_UNQUOTED pwr-led
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_STRING_TOKEN pwr_led
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_STRING_UPPER_TOKEN PWR_LED
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_IDX_0 "pwr-led"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, line_name, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, line_name, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, line_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, line_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1_P_line_name_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC1
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_PATH "/soc/i2c@3ff53000/axp192@34/axp192_regulator/DCDC1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FULL_NAME "DCDC1"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FULL_NAME_UNQUOTED DCDC1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FULL_NAME_TOKEN DCDC1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FULL_NAME_UPPER_TOKEN DCDC1

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_regulator) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_NODELABEL(fn) fn(vdd_mcu)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_NODELABEL_VARGS(fn, ...) fn(vdd_mcu, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_HASH x1gIANueWIz9_k0pF3ddUQ_M0n6HWDQvZMjrOkQjBP8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_ORD 99
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_REQUIRES_ORDS \
	34, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_EXISTS 1
#define DT_N_NODELABEL_vdd_mcu DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_initial_mode 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_initial_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_initial_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_initial_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_initial_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_init_microvolt 3350000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_init_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_min_microvolt 3200000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_min_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_max_microvolt 3400000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_max_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_always_on 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_always_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_boot_on 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_boot_off 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1_P_regulator_boot_off_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO2
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_PATH "/soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FULL_NAME "LDO2"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FULL_NAME_UNQUOTED LDO2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FULL_NAME_TOKEN LDO2
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FULL_NAME_UPPER_TOKEN LDO2

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_regulator) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_NODELABEL(fn) fn(v_peri)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_NODELABEL_VARGS(fn, ...) fn(v_peri, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_HASH DxHdtmREbIlso1nhGAKB4F7Cv_pqltpm81TXboMPyeE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_ORD 100
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_REQUIRES_ORDS \
	34, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_EXISTS 1
#define DT_N_NODELABEL_v_peri DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_initial_mode 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_initial_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_initial_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_initial_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_initial_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_init_microvolt 3300000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_init_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_min_microvolt 3200000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_min_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_max_microvolt 3300000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_max_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_always_on 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_always_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_boot_on 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_boot_off 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2_P_regulator_boot_off_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO3
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_PATH "/soc/i2c@3ff53000/axp192@34/axp192_regulator/LDO3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FULL_NAME "LDO3"
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FULL_NAME_UNQUOTED LDO3
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FULL_NAME_TOKEN LDO3
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FULL_NAME_UPPER_TOKEN LDO3

/* Node parent (/soc/i2c@3ff53000/axp192@34/axp192_regulator) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_PARENT DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_NODELABEL(fn) fn(vib_motor)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_NODELABEL_VARGS(fn, ...) fn(vib_motor, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_HASH _XPKY6_5KqebOTuCa_IH102RwKMCYQMpLVR_6Uj_2AA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_ORD 101
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_REQUIRES_ORDS \
	34, /* /soc/i2c@3ff53000/axp192@34/axp192_regulator */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_EXISTS 1
#define DT_N_NODELABEL_vib_motor DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_REG_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_initial_mode 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_initial_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_initial_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_initial_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_initial_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_init_microvolt 2800000
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_init_microvolt_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_always_on 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_always_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_boot_on 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_boot_off 0
#define DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3_P_regulator_boot_off_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000
 *
 * Binding (compatible = espressif,esp32-sdhc):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_PATH "/soc/sdhc@3ff68000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME "sdhc@3ff68000"
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_UNQUOTED sdhc@3ff68000
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_TOKEN sdhc_3ff68000
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_UPPER_TOKEN SDHC_3FF68000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_NODELABEL(fn) fn(sdhc)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_NUM 2
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_HASH j_fjdX120STK_n9WdWPe8ciwJubE2OYJD_gsOzNJnWg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_ORD 102
#define DT_N_S_soc_S_sdhc_3ff68000_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_REQUIRES_ORDS \
	2, /* /soc */ \
	5, /* /soc/interrupt-controller@3ff00104 */ \
	6, /* /soc/rtc@3ff48000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_SUPPORTS_ORDS \
	103, /* /soc/sdhc@3ff68000/sdhc@0 */ \
	104, /* /soc/sdhc@3ff68000/sdhc@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc DT_N_S_soc_S_sdhc_3ff68000
#define DT_N_NODELABEL_sdhc              DT_N_S_soc_S_sdhc_3ff68000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_VAL_ADDRESS 1073119232 /* 0x3ff68000 */
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_sdhc_3ff68000_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MATCHES_espressif_esp32_sdhc 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MODEL_IDX_0 "esp32-sdhc"
#define DT_N_S_soc_S_sdhc_3ff68000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg {1073119232 /* 0x3ff68000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_0 1073119232
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible {"espressif,esp32-sdhc"}
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0 "espressif,esp32-sdhc"
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_3ff48000
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_VAL_offset 20
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000/sdhc@0
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PATH "/soc/sdhc@3ff68000/sdhc@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME "sdhc@0"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_UNQUOTED sdhc@0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_TOKEN sdhc_0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_UPPER_TOKEN SDHC_0

/* Node parent (/soc/sdhc@3ff68000) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PARENT DT_N_S_soc_S_sdhc_3ff68000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_NODELABEL(fn) fn(sdhc0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_HASH nRVf6Mr7L_e9PJlUO2Tpaf7qVOT5UFHve8_pHN_aRC0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_ORD 103
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REQUIRES_ORDS \
	102, /* /soc/sdhc@3ff68000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0
#define DT_N_NODELABEL_sdhc0                  DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width 4
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000/sdhc@1
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PATH "/soc/sdhc@3ff68000/sdhc@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME "sdhc@1"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_UNQUOTED sdhc@1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_TOKEN sdhc_1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_UPPER_TOKEN SDHC_1

/* Node parent (/soc/sdhc@3ff68000) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PARENT DT_N_S_soc_S_sdhc_3ff68000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_NODELABEL(fn) fn(sdhc1)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_HASH SaAqgBDCup1fjThb6lC9xIACx_sNjTUfpw_VokcV7yg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_ORD 104
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REQUIRES_ORDS \
	102, /* /soc/sdhc@3ff68000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_EXISTS 1
#define DT_N_INST_1_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1
#define DT_N_NODELABEL_sdhc1                  DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width 4
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@3ff65000/sd@1
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff65000_S_sd_1
 *
 * Binding (compatible = zephyr,sdhc-spi-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/zephyr,sdhc-spi-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_PATH "/soc/spi@3ff65000/sd@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FULL_NAME "sd@1"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FULL_NAME_UNQUOTED sd@1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FULL_NAME_TOKEN sd_1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FULL_NAME_UPPER_TOKEN SD_1

/* Node parent (/soc/spi@3ff65000) identifier: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_PARENT DT_N_S_soc_S_spi_3ff65000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_NODELABEL(fn) fn(sd0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(sd0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_CHILD_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_HASH kfEtwuivyoKnjSK8_mQnu_66_xhoEd9M62GDHQgcP_8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_ORD 105
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_REQUIRES_ORDS \
	32, /* /soc/spi@3ff65000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_SUPPORTS_ORDS \
	106, /* /soc/spi@3ff65000/sd@1/mmc */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_EXISTS 1
#define DT_N_ALIAS_sdhc0                 DT_N_S_soc_S_spi_3ff65000_S_sd_1
#define DT_N_INST_0_zephyr_sdhc_spi_slot DT_N_S_soc_S_spi_3ff65000_S_sd_1
#define DT_N_NODELABEL_sd0               DT_N_S_soc_S_spi_3ff65000_S_sd_1

/* Bus info (controller: '/soc/spi@3ff65000', type: '['spi']') */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_BUS_spi 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_BUS DT_N_S_soc_S_spi_3ff65000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_REG_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_IRQ_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_COMPAT_MATCHES_zephyr_sdhc_spi_slot 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_COMPAT_MODEL_IDX_0 "sdhc-spi-slot"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_power_delay_ms 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_clock_mode_cpol 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_clock_mode_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_clock_mode_cpha 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_clock_mode_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_max_frequency 20000000
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_duplex 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_duplex_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_duplex_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_duplex_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_frame_format 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_frame_format_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_frame_format_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_frame_format_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_cpol 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_cpha 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_hold_cs 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_spi_hold_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status "okay"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible {"zephyr,sdhc-spi-slot"}
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_IDX_0 "zephyr,sdhc-spi-slot"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_IDX_0_STRING_UNQUOTED zephyr,sdhc-spi-slot
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_IDX_0_STRING_TOKEN zephyr_sdhc_spi_slot
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_SDHC_SPI_SLOT
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@3ff65000/sd@1/mmc
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc
 *
 * Binding (compatible = zephyr,sdmmc-disk):
 *   $ZEPHYR_BASE/dts/bindings/sd/zephyr,sdmmc-disk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_PATH "/soc/spi@3ff65000/sd@1/mmc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FULL_NAME "mmc"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FULL_NAME_UNQUOTED mmc
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FULL_NAME_TOKEN mmc
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FULL_NAME_UPPER_TOKEN MMC

/* Node parent (/soc/spi@3ff65000/sd@1) identifier: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_PARENT DT_N_S_soc_S_spi_3ff65000_S_sd_1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_NODELABEL_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_CHILD_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_HASH C61CJ2zaIo6WDqnZ_mxMQetwUNm_wYKuldOMH8C2XuE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_ORD 106
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_REQUIRES_ORDS \
	105, /* /soc/spi@3ff65000/sd@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_EXISTS 1
#define DT_N_INST_0_zephyr_sdmmc_disk DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc

/* Bus info (controller: '/soc/spi@3ff65000/sd@1', type: '['sd']') */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_BUS_sd 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_BUS DT_N_S_soc_S_spi_3ff65000_S_sd_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_REG_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_IRQ_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_COMPAT_MATCHES_zephyr_sdmmc_disk 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_COMPAT_MODEL_IDX_0 "sdmmc-disk"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name "SD"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_STRING_UNQUOTED SD
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_STRING_TOKEN SD
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_STRING_UPPER_TOKEN SD
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_IDX_0 "SD"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, disk_name, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, disk_name, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, disk_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, disk_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_disk_name_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status "okay"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible {"zephyr,sdmmc-disk"}
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_IDX_0 "zephyr,sdmmc-disk"
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_IDX_0_STRING_UNQUOTED zephyr,sdmmc-disk
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_IDX_0_STRING_TOKEN zephyr_sdmmc_disk
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_SDMMC_DISK
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_canbus                  DT_N_S_soc_S_can_3ff6b000
#define DT_CHOSEN_zephyr_canbus_EXISTS           1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_trng_3ff75144
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_3ff42000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_bt_hci                  DT_N_S_esp32_bt_hci
#define DT_CHOSEN_zephyr_bt_hci_EXISTS           1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_3ffe0000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_display                 DT_N_S_mipi_dbi_S_ili9342c_0
#define DT_CHOSEN_zephyr_display_EXISTS          1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_rtc                     DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51
#define DT_CHOSEN_zephyr_rtc_EXISTS              1
#define DT_CHOSEN_zephyr_touch                   DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38
#define DT_CHOSEN_zephyr_touch_EXISTS            1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_ipm_3ffe9630) fn(DT_N_S_soc_S_mbox_3ffe9638) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_3ff48000) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_uart_3ff50000) fn(DT_N_S_soc_S_uart_3ff6e000) fn(DT_N_S_soc_S_pcnt_3ff57000) fn(DT_N_S_soc_S_ledc_3ff59000) fn(DT_N_S_soc_S_mcpwm_3ff5e000) fn(DT_N_S_soc_S_mcpwm_3ff6c000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800) fn(DT_N_S_soc_S_touch_3ff48858) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38) fn(DT_N_S_soc_S_i2c_3ff67000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_watchdog_3ff60048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc) fn(DT_N_S_soc_S_can_3ff6b000) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_dac_3ff48800) fn(DT_N_S_soc_S_adc_3ff48800) fn(DT_N_S_soc_S_adc_3ff48890) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_eth) fn(DT_N_S_mdio) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_grove_header) fn(DT_N_S_m5stack_mbus_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_pwr) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_mipi_dbi) fn(DT_N_S_mipi_dbi_S_ili9342c_0) fn(DT_N_S_bus_5v)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_3ff48000) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_grove_header) fn(DT_N_S_m5stack_mbus_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_pwr) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_mipi_dbi) fn(DT_N_S_mipi_dbi_S_ili9342c_0) fn(DT_N_S_bus_5v)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__) fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__) fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_eth, __VA_ARGS__) fn(DT_N_S_mdio, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_grove_header, __VA_ARGS__) fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_mipi_dbi, __VA_ARGS__) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__) fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_dcdc3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator_S_ldo3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio_S_axp192_gpio0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_tx_gpio1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_rx_gpio3, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_rx_gpio33, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio13, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_rx_gpio14, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_tx_gpio32, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_grove_header, __VA_ARGS__) fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_pwr, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_mipi_dbi, __VA_ARGS__) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__) fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_lpcore DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_lpcore_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_lpcore DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_lpcore_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_coredump DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000
#define DT_COMPAT_fixed_partitions_LABEL_coredump_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_m5stack_core2 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_psram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_intc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_rtc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_rtc_timer 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_espressif_crosscore_interrupt 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_uart 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_gpio 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_i2c 1
#define DT_COMPAT_HAS_OKAY_nxp_pcf8563 1
#define DT_COMPAT_HAS_OKAY_x_powers_axp192 1
#define DT_COMPAT_HAS_OKAY_x_powers_axp192_regulator 1
#define DT_COMPAT_HAS_OKAY_x_powers_axp192_gpio 1
#define DT_COMPAT_HAS_OKAY_focaltech_ft5336 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_trng 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_watchdog 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_spi 1
#define DT_COMPAT_HAS_OKAY_zephyr_sdhc_spi_slot 1
#define DT_COMPAT_HAS_OKAY_zephyr_sdmmc_disk 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_timer 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_sdhc 1
#define DT_COMPAT_HAS_OKAY_espressif_xtensa_lx6 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_bt_hci 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_grove_header 1
#define DT_COMPAT_HAS_OKAY_m5stack_mbus_header 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zephyr_lvgl_pointer_input 1
#define DT_COMPAT_HAS_OKAY_zephyr_mipi_dbi_spi 1
#define DT_COMPAT_HAS_OKAY_ilitek_ili9342c 1
#define DT_COMPAT_HAS_OKAY_regulator_fixed 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_m5stack_core2_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 2
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 6
#define DT_N_INST_mmio_sram_NUM_OKAY 8
#define DT_N_INST_espressif_esp32_psram_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_intc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_rtc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_rtc_timer_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_espressif_crosscore_interrupt_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_uart_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_gpio_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_i2c_NUM_OKAY 1
#define DT_N_INST_nxp_pcf8563_NUM_OKAY 1
#define DT_N_INST_x_powers_axp192_NUM_OKAY 1
#define DT_N_INST_x_powers_axp192_regulator_NUM_OKAY 1
#define DT_N_INST_x_powers_axp192_gpio_NUM_OKAY 1
#define DT_N_INST_focaltech_ft5336_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_trng_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_watchdog_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_spi_NUM_OKAY 1
#define DT_N_INST_zephyr_sdhc_spi_slot_NUM_OKAY 1
#define DT_N_INST_zephyr_sdmmc_disk_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_timer_NUM_OKAY 4
#define DT_N_INST_espressif_esp32_sdhc_NUM_OKAY 1
#define DT_N_INST_espressif_xtensa_lx6_NUM_OKAY 2
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_bt_hci_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_pinctrl_NUM_OKAY 1
#define DT_N_INST_grove_header_NUM_OKAY 1
#define DT_N_INST_m5stack_mbus_header_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zephyr_lvgl_pointer_input_NUM_OKAY 1
#define DT_N_INST_zephyr_mipi_dbi_spi_NUM_OKAY 1
#define DT_N_INST_ilitek_ili9342c_NUM_OKAY 1
#define DT_N_INST_regulator_fixed_NUM_OKAY 1
#define DT_FOREACH_OKAY_m5stack_core2(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_m5stack_core2(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_m5stack_core2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_m5stack_core2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc) fn(DT_N_S_soc_S_gpio)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_psram(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_psram(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_psram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_psram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_intc(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_intc(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_intc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_intc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_rtc(fn) fn(DT_N_S_soc_S_rtc_3ff48000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_3ff48000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_rtc_timer(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_rtc_timer(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_rtc_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_rtc_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_crosscore_interrupt(fn) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c)
#define DT_FOREACH_OKAY_VARGS_espressif_crosscore_interrupt(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_crosscore_interrupt(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_crosscore_interrupt(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_uart(fn) fn(DT_N_S_soc_S_uart_3ff40000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_uart(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_gpio(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_i2c(fn) fn(DT_N_S_soc_S_i2c_3ff53000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_pcf8563(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51)
#define DT_FOREACH_OKAY_VARGS_nxp_pcf8563(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_pfc8563_51, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_pcf8563(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_pcf8563(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_x_powers_axp192(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34)
#define DT_FOREACH_OKAY_VARGS_x_powers_axp192(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_x_powers_axp192(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_x_powers_axp192(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_x_powers_axp192_regulator(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator)
#define DT_FOREACH_OKAY_VARGS_x_powers_axp192_regulator(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_regulator, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_x_powers_axp192_regulator(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_x_powers_axp192_regulator(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_x_powers_axp192_gpio(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio)
#define DT_FOREACH_OKAY_VARGS_x_powers_axp192_gpio(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_axp192_34_S_axp192_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_x_powers_axp192_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_x_powers_axp192_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_focaltech_ft5336(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38)
#define DT_FOREACH_OKAY_VARGS_focaltech_ft5336(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_ft5336_38, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_focaltech_ft5336(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_focaltech_ft5336(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_trng(fn) fn(DT_N_S_soc_S_trng_3ff75144)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_trng(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_spi(fn) fn(DT_N_S_soc_S_spi_3ff65000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_spi(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_sdhc_spi_slot(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1)
#define DT_FOREACH_OKAY_VARGS_zephyr_sdhc_spi_slot(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_sdhc_spi_slot(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_sdhc_spi_slot(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_sdmmc_disk(fn) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc)
#define DT_FOREACH_OKAY_VARGS_zephyr_sdmmc_disk(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000_S_sd_1_S_mmc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_sdmmc_disk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_sdmmc_disk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_timer(fn) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_timer(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_timer(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_timer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_sdhc(fn) fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_sdhc(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_sdhc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_sdhc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_xtensa_lx6(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_espressif_xtensa_lx6(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_xtensa_lx6(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_xtensa_lx6(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_bt_hci(fn) fn(DT_N_S_esp32_bt_hci)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_bt_hci(fn, ...) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_bt_hci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_bt_hci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_grove_header(fn) fn(DT_N_S_grove_header)
#define DT_FOREACH_OKAY_VARGS_grove_header(fn, ...) fn(DT_N_S_grove_header, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_grove_header(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_grove_header(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_m5stack_mbus_header(fn) fn(DT_N_S_m5stack_mbus_connector)
#define DT_FOREACH_OKAY_VARGS_m5stack_mbus_header(fn, ...) fn(DT_N_S_m5stack_mbus_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_m5stack_mbus_header(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_m5stack_mbus_header(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_lvgl_pointer_input(fn) fn(DT_N_S_lvgl_pointer)
#define DT_FOREACH_OKAY_VARGS_zephyr_lvgl_pointer_input(fn, ...) fn(DT_N_S_lvgl_pointer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_lvgl_pointer_input(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_lvgl_pointer_input(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_mipi_dbi_spi(fn) fn(DT_N_S_mipi_dbi)
#define DT_FOREACH_OKAY_VARGS_zephyr_mipi_dbi_spi(fn, ...) fn(DT_N_S_mipi_dbi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_mipi_dbi_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_mipi_dbi_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ilitek_ili9342c(fn) fn(DT_N_S_mipi_dbi_S_ili9342c_0)
#define DT_FOREACH_OKAY_VARGS_ilitek_ili9342c(fn, ...) fn(DT_N_S_mipi_dbi_S_ili9342c_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ilitek_ili9342c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ilitek_ili9342c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_regulator_fixed(fn) fn(DT_N_S_bus_5v)
#define DT_FOREACH_OKAY_VARGS_regulator_fixed(fn, ...) fn(DT_N_S_bus_5v, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_regulator_fixed(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_regulator_fixed(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_nxp_pcf8563_BUS_i2c 1
#define DT_COMPAT_x_powers_axp192_BUS_i2c 1
#define DT_COMPAT_x_powers_axp192_regulator_BUS_i2c 1
#define DT_COMPAT_x_powers_axp192_gpio_BUS_i2c 1
#define DT_COMPAT_focaltech_ft5336_BUS_i2c 1
#define DT_COMPAT_zephyr_sdhc_spi_slot_BUS_spi 1
#define DT_COMPAT_zephyr_sdmmc_disk_BUS_sd 1
#define DT_COMPAT_ilitek_ili9342c_BUS_mipi_dbi 1
